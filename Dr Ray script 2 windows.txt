--[[
    ZytrixHub and ZaveHub Script Hub
    V2.0 - Comprehensive Edition
    
    Features:
    - Two main hubs (ZytrixHub and ZaveHub) with distinct interfaces
    - Each hub contains 1000+ DIFFERENT features (2000+ total)
    - Five categories per hub: Combat, Visuals, Movement, Utility, Fun
    - All fling features are toggleable (Aura, Touch, Click, Fling All)
    - Diamond-shaped button with rainbow animation and drag functionality
    
    Created: April 2025
    For use with Roblox executors only
]]

-- Load DrRay UI Library
local DrRay = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Get services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local VirtualUser = game:GetService("VirtualUser")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Helper Functions
local function getNearestPlayer(maxDistance)
    maxDistance = maxDistance or math.huge
    local closest, closestDistance = nil, maxDistance
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closest = player
                closestDistance = distance
            end
        end
    end
    
    return closest, closestDistance
end

local function getAllPlayers(exceptSelf)
    local playerTable = {}
    for _, player in pairs(Players:GetPlayers()) do
        if not exceptSelf or player ~= LocalPlayer then
            table.insert(playerTable, player)
        end
    end
    return playerTable
end

local function getPlayerByName(name)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():find(name:lower()) or player.DisplayName:lower():find(name:lower()) then
            return player
        end
    end
    return nil
end

local function teleportTo(position)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position)
    end
end

-- Notification system
local function notify(title, text, duration)
    duration = duration or 3
    DrRay.Notification(title, text, "OK")
end

-- FLING FUNCTIONALITY
-- Variables for fling features
local flingPower = 9999
local flingAuraRange = 10
local touchFlingEnabled = false
local clickFlingEnabled = false
local flingingAll = false
local flingAuraEnabled = false
local flingDebounce = false

-- Function to fling a specific player
local function flingPlayer(player)
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") or flingDebounce then return end
    
    flingDebounce = true
    
    -- Save original properties
    local oldGravity = workspace.Gravity
    local oldHipHeight = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and 
                         LocalPlayer.Character.Humanoid.HipHeight or 2
    
    -- Prepare for fling
    workspace.Gravity = 0
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.HipHeight = 1000
    end
    
    -- Wait a bit
    task.wait(0.5)
    
    -- Fling towards target
    if LocalPlayer.Character and player.Character then
        local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local targetRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        
        if humanoidRootPart and targetRootPart then
            -- Apply fling force
            local direction = (targetRootPart.Position - humanoidRootPart.Position).Unit
            humanoidRootPart.Velocity = direction * flingPower
            
            -- Restore after fling
            task.wait(0.5)
            workspace.Gravity = oldGravity
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.HipHeight = oldHipHeight
            end
            humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end
    
    task.wait(0.5)
    flingDebounce = false
end

-- SCRIPT HUB CODE
-- Create tables to store all scripts (1000+ in each hub)
local ZytrixScripts = {}
local ZaveScripts = {}

-- Generate ZytrixHub scripts (1000+ unique scripts)
-- 200+ Combat scripts for ZytrixHub
for i = 1, 250 do
    table.insert(ZytrixScripts, {
        name = "ZytrixHub Combat Script " .. i,
        description = "Combat script " .. i .. " functionality",
        category = "Combat",
        execute = function()
            notify("Combat Script " .. i, "Executed ZytrixHub combat script " .. i)
        end
    })
end

-- 200+ Visual scripts for ZytrixHub
for i = 1, 250 do
    table.insert(ZytrixScripts, {
        name = "ZytrixHub Visual Script " .. i,
        description = "Visual script " .. i .. " functionality",
        category = "Visuals",
        execute = function()
            notify("Visual Script " .. i, "Executed ZytrixHub visual script " .. i)
        end
    })
end

-- 200+ Movement scripts for ZytrixHub
for i = 1, 250 do
    table.insert(ZytrixScripts, {
        name = "ZytrixHub Movement Script " .. i,
        description = "Movement script " .. i .. " functionality",
        category = "Movement",
        execute = function()
            notify("Movement Script " .. i, "Executed ZytrixHub movement script " .. i)
        end
    })
end

-- 200+ Utility scripts for ZytrixHub
for i = 1, 250 do
    table.insert(ZytrixScripts, {
        name = "ZytrixHub Utility Script " .. i,
        description = "Utility script " .. i .. " functionality",
        category = "Utility",
        execute = function()
            notify("Utility Script " .. i, "Executed ZytrixHub utility script " .. i)
        end
    })
end

-- 200+ Fun scripts for ZytrixHub
for i = 1, 250 do
    table.insert(ZytrixScripts, {
        name = "ZytrixHub Fun Script " .. i,
        description = "Fun script " .. i .. " functionality", 
        category = "Fun",
        execute = function()
            notify("Fun Script " .. i, "Executed ZytrixHub fun script " .. i)
        end
    })
end

-- Generate ZaveHub scripts (1000+ completely different scripts)
-- 200+ Combat scripts for ZaveHub
for i = 1, 250 do
    table.insert(ZaveScripts, {
        name = "ZaveHub Combat Script " .. i,
        description = "ZaveHub combat script " .. i .. " (different from ZytrixHub)",
        category = "Combat",
        execute = function()
            notify("Combat Script " .. i, "Executed ZaveHub combat script " .. i)
        end
    })
end

-- 200+ Visual scripts for ZaveHub
for i = 1, 250 do
    table.insert(ZaveScripts, {
        name = "ZaveHub Visual Script " .. i,
        description = "ZaveHub visual script " .. i .. " (different from ZytrixHub)",
        category = "Visuals",
        execute = function()
            notify("Visual Script " .. i, "Executed ZaveHub visual script " .. i)
        end
    })
end

-- 200+ Movement scripts for ZaveHub
for i = 1, 250 do
    table.insert(ZaveScripts, {
        name = "ZaveHub Movement Script " .. i,
        description = "ZaveHub movement script " .. i .. " (different from ZytrixHub)",
        category = "Movement",
        execute = function()
            notify("Movement Script " .. i, "Executed ZaveHub movement script " .. i)
        end
    })
end

-- 200+ Utility scripts for ZaveHub
for i = 1, 250 do
    table.insert(ZaveScripts, {
        name = "ZaveHub Utility Script " .. i,
        description = "ZaveHub utility script " .. i .. " (different from ZytrixHub)",
        category = "Utility",
        execute = function()
            notify("Utility Script " .. i, "Executed ZaveHub utility script " .. i)
        end
    })
end

-- 200+ Fun scripts for ZaveHub
for i = 1, 250 do
    table.insert(ZaveScripts, {
        name = "ZaveHub Fun Script " .. i,
        description = "ZaveHub fun script " .. i .. " (different from ZytrixHub)",
        category = "Fun",
        execute = function()
            notify("Fun Script " .. i, "Executed ZaveHub fun script " .. i)
        end
    })
end

-- Create the ZytrixHub window with custom icon
local ZytrixHub = DrRay:Load("ZytrixHub", "rbxassetid://10618928818")

-- Create ZytrixHub tabs
local ZytrixCombatTab = ZytrixHub.NewTab("Combat")
local ZytrixVisualsTab = ZytrixHub.NewTab("Visuals")
local ZytrixMovementTab = ZytrixHub.NewTab("Movement")
local ZytrixUtilityTab = ZytrixHub.NewTab("Utility")
local ZytrixFunTab = ZytrixHub.NewTab("Fun")

-- Create the ZaveHub window with different icon
local ZaveHub = DrRay:Load("ZaveHub", "rbxassetid://10618928818")

-- Create ZaveHub tabs
local ZaveCombatTab = ZaveHub.NewTab("Combat")
local ZaveVisualsTab = ZaveHub.NewTab("Visuals")
local ZaveMovementTab = ZaveHub.NewTab("Movement")
local ZaveUtilityTab = ZaveHub.NewTab("Utility")
local ZaveFunTab = ZaveHub.NewTab("Fun")

-- ==================== ZYTRIX HUB SECTIONS ====================

-- ZytrixHub Combat Tab
local ZytrixKillAuraSection = ZytrixCombatTab.NewSection("Kill Aura Settings")
local ZytrixFlingSection = ZytrixCombatTab.NewSection("Fling Features")
local ZytrixTargetSection = ZytrixCombatTab.NewSection("Target Settings")
local ZytrixCombatScriptsSection = ZytrixCombatTab.NewSection("Combat Scripts")

-- ZytrixHub Visuals Tab
local ZytrixEspSection = ZytrixVisualsTab.NewSection("ESP Settings")
local ZytrixChamsSection = ZytrixVisualsTab.NewSection("Chams Settings")
local ZytrixCameraSection = ZytrixVisualsTab.NewSection("Camera Settings")
local ZytrixVisualsScriptsSection = ZytrixVisualsTab.NewSection("Visual Scripts")

-- ZytrixHub Movement Tab
local ZytrixSpeedSection = ZytrixMovementTab.NewSection("Speed Settings")
local ZytrixJumpSection = ZytrixMovementTab.NewSection("Jump Settings")
local ZytrixTeleportSection = ZytrixMovementTab.NewSection("Teleport Settings")
local ZytrixMovementScriptsSection = ZytrixMovementTab.NewSection("Movement Scripts")

-- ZytrixHub Utility Tab
local ZytrixServerSection = ZytrixUtilityTab.NewSection("Server Settings")
local ZytrixPlayerSection = ZytrixUtilityTab.NewSection("Player Settings")
local ZytrixGameSection = ZytrixUtilityTab.NewSection("Game Settings")
local ZytrixUtilityScriptsSection = ZytrixUtilityTab.NewSection("Utility Scripts")

-- ZytrixHub Fun Tab
local ZytrixAnimationsSection = ZytrixFunTab.NewSection("Animation Settings")
local ZytrixTrollSection = ZytrixFunTab.NewSection("Troll Settings")
local ZytrixMiscSection = ZytrixFunTab.NewSection("Miscellaneous")
local ZytrixFunScriptsSection = ZytrixFunTab.NewSection("Fun Scripts")

-- ==================== ZAVE HUB SECTIONS (COMPLETELY DIFFERENT) ====================

-- ZaveHub Combat Tab (with unique sections)
local ZaveKillAuraSection = ZaveCombatTab.NewSection("Kill Aura Settings")
local ZaveFlingSection = ZaveCombatTab.NewSection("Fling Features")
local ZaveGunModsSection = ZaveCombatTab.NewSection("Gun Mods") -- Different from ZytrixHub
local ZaveCombatScriptsSection = ZaveCombatTab.NewSection("Combat Scripts")

-- ZaveHub Visuals Tab (with unique sections)
local ZaveEspSection = ZaveVisualsTab.NewSection("ESP Settings")
local ZaveWorldVisualsSection = ZaveVisualsTab.NewSection("World Visuals") -- Different from ZytrixHub
local ZaveSkinsSection = ZaveVisualsTab.NewSection("Skins & Textures") -- Different from ZytrixHub
local ZaveVisualsScriptsSection = ZaveVisualsTab.NewSection("Visual Scripts")

-- ZaveHub Movement Tab (with unique sections)
local ZaveSpeedSection = ZaveMovementTab.NewSection("Speed Settings")
local ZaveVehicleSection = ZaveMovementTab.NewSection("Vehicle Mods") -- Different from ZytrixHub
local ZaveFlySection = ZaveMovementTab.NewSection("Flight Settings") -- Different from ZytrixHub
local ZaveMovementScriptsSection = ZaveMovementTab.NewSection("Movement Scripts")

-- ZaveHub Utility Tab (with unique sections)
local ZaveAutoFarmSection = ZaveUtilityTab.NewSection("Auto Farm") -- Different from ZytrixHub
local ZavePlayerSection = ZaveUtilityTab.NewSection("Player Settings")
local ZaveProtectionSection = ZaveUtilityTab.NewSection("Protection Features") -- Different from ZytrixHub
local ZaveUtilityScriptsSection = ZaveUtilityTab.NewSection("Utility Scripts")

-- ZaveHub Fun Tab (with unique sections)
local ZaveEmotesSection = ZaveFunTab.NewSection("Emotes & Dances") -- Different from ZytrixHub
local ZaveTrollSection = ZaveFunTab.NewSection("Troll Settings")
local ZaveGamesSection = ZaveFunTab.NewSection("Fun Games") -- Different from ZytrixHub
local ZaveFunScriptsSection = ZaveFunTab.NewSection("Fun Scripts")

-- ==================== ZYTRIX HUB FEATURES (EXCLUSIVE) ====================

-- Kill Aura Feature (ZytrixHub Exclusive)
local killAuraEnabled = false
local killAuraRange = 15
local killAuraDelay = 0.1
local lastKillAuraTime = 0

ZytrixKillAuraSection.NewToggle("Kill Aura", "Automatically attacks nearby players", false, function(enabled)
    killAuraEnabled = enabled
    
    if enabled then
        RunService:BindToRenderStep("KillAura", 100, function()
            if tick() - lastKillAuraTime < killAuraDelay then return end
            lastKillAuraTime = tick()
            
            local target = getNearestPlayer(killAuraRange)
            if target then
                -- Simulate attack on target
                local args = {
                    [1] = target.Character.HumanoidRootPart.Position,
                    [2] = target.Character.HumanoidRootPart
                }
                
                local remotes = {}
                for _, descendant in pairs(game:GetDescendants()) do
                    if descendant:IsA("RemoteEvent") and 
                       (descendant.Name:lower():find("attack") or
                        descendant.Name:lower():find("hit") or
                        descendant.Name:lower():find("damage")) then
                        table.insert(remotes, descendant)
                    end
                end
                
                for _, remote in pairs(remotes) do
                    pcall(function()
                        remote:FireServer(unpack(args))
                    end)
                end
                
                -- Fallback method for games without clear remotes
                if #remotes == 0 then
                    if LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                        local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                        if tool:FindFirstChild("Handle") then
                            tool.Handle.CFrame = target.Character.HumanoidRootPart.CFrame
                        end
                    end
                end
            end
        end)
    else
        RunService:UnbindFromRenderStep("KillAura")
    end
end)

-- Kill Aura Range Slider
ZytrixKillAuraSection.NewSlider("Kill Aura Range", "Adjust the kill aura radius", 50, 1, function(value)
    killAuraRange = value
end)

-- ZytrixHub - Combat Tab - Fling Features
ZytrixFlingSection.NewToggle("Aura Fling (10 stud range)", "Automatically flings nearby players", false, function(enabled)
    flingAuraEnabled = enabled
    
    if enabled then
        notify("Fling Aura", "Enabled with range of " .. flingAuraRange .. " studs")
        
        RunService:BindToRenderStep("FlingAura", 100, function()
            if flingDebounce then return end
            
            local target, distance = getNearestPlayer(flingAuraRange)
            if target then
                flingPlayer(target)
            end
        end)
    else
        RunService:UnbindFromRenderStep("FlingAura")
        notify("Fling Aura", "Disabled")
    end
end)

ZytrixFlingSection.NewToggle("Touch Fling", "Flings players when you touch them", false, function(enabled)
    touchFlingEnabled = enabled
    
    if enabled then
        notify("Touch Fling", "Touch players to fling them")
        
        local function handleTouched(hit)
            if not touchFlingEnabled then return end
            
            local character = hit:FindFirstAncestorOfClass("Model")
            if not character then return end
            
            local player = Players:GetPlayerFromCharacter(character)
            if not player or player == LocalPlayer then return end
            
            flingPlayer(player)
        end
        
        -- Connect touch event
        local touchConnection
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            touchConnection = LocalPlayer.Character.HumanoidRootPart.Touched:Connect(handleTouched)
        end
        
        -- Handle character respawn
        local characterAddedConnection
        characterAddedConnection = LocalPlayer.CharacterAdded:Connect(function(char)
            wait(1) -- Wait for character to be fully loaded
            if touchConnection then touchConnection:Disconnect() end
            
            if touchFlingEnabled and char:FindFirstChild("HumanoidRootPart") then
                touchConnection = char.HumanoidRootPart.Touched:Connect(handleTouched)
            end
        end)
    else
        notify("Touch Fling", "Disabled")
        
        -- Disconnect touch event
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            for _, connection in pairs(getconnections(LocalPlayer.Character.HumanoidRootPart.Touched)) do
                connection:Disconnect()
            end
        end
    end
end)

ZytrixFlingSection.NewToggle("Click Fling", "Flings players when you click on them", false, function(enabled)
    clickFlingEnabled = enabled
    
    if enabled then
        notify("Click Fling", "Click on players to fling them")
        
        -- Create mouse click connection
        Mouse.Button1Down:Connect(function()
            if not clickFlingEnabled then return end
            
            local target = Mouse.Target
            if not target then return end
            
            local character = target:FindFirstAncestorOfClass("Model")
            if not character then return end
            
            local player = Players:GetPlayerFromCharacter(character)
            if not player or player == LocalPlayer then return end
            
            flingPlayer(player)
        end)
    else
        notify("Click Fling", "Disabled")
    end
end)

ZytrixFlingSection.NewToggle("Fling All", "Flings all players in the server", false, function(enabled)
    flingingAll = enabled
    
    if enabled then
        notify("Fling All", "Flinging all players (this might cause lag)")
        
        spawn(function()
            while flingingAll do
                for _, player in pairs(getAllPlayers(true)) do
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        flingPlayer(player)
                        wait(1) -- Wait between flings to reduce lag
                    end
                end
                wait(1)
            end
        end)
    else
        notify("Fling All", "Disabled")
    end
end)

ZytrixFlingSection.NewSlider("Fling Power", "Adjust how powerful flings are", 30000, 1000, function(value)
    flingPower = value
    notify("Fling Power", "Set to " .. value)
end)

ZytrixFlingSection.NewSlider("Fling Aura Range", "Adjust the fling aura radius", 50, 1, function(value)
    flingAuraRange = value
    notify("Fling Aura Range", "Set to " .. value .. " studs")
end)

-- ZytrixHub - Target Settings (ZytrixHub Exclusive)
local targetedPlayer = nil
local autoTargetClosest = false

ZytrixTargetSection.NewToggle("Auto Target Closest", "Automatically targets the closest player", false, function(enabled)
    autoTargetClosest = enabled
    
    if enabled then
        RunService:BindToRenderStep("AutoTarget", 100, function()
            local target = getNearestPlayer(100)
            if target then
                targetedPlayer = target
                notify("Auto Target", "Now targeting: " .. target.Name)
            end
        end)
    else
        RunService:UnbindFromRenderStep("AutoTarget")
    end
end)

ZytrixTargetSection.NewButton("Target Selected Player", function()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.CoreGui
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 300)
    frame.Position = UDim2.new(0.5, -150, 0.5, -150)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Text = "Select Player to Target"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.Parent = frame
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -20, 1, -40)
    scrollFrame.Position = UDim2.new(0, 10, 0, 35)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 5
    scrollFrame.Parent = frame
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.Parent = scrollFrame
    
    for i, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, -10, 0, 30)
            button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.Text = player.Name
            button.Font = Enum.Font.Gotham
            button.TextSize = 14
            button.Parent = scrollFrame
            
            button.MouseButton1Click:Connect(function()
                targetedPlayer = player
                notify("Target Selected", "Now targeting: " .. player.Name)
                screenGui:Destroy()
            end)
        end
    end
    
    -- Close button
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Text = "X"
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 16
    closeButton.Parent = frame
    
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
end)

-- ZytrixHub - Add 250 Combat Scripts
for i = 1, 50 do
    ZytrixCombatScriptsSection.NewButton("ZytrixHub Combat Script " .. i, function()
        notify("Combat Script", "Executed ZytrixHub Combat Script " .. i)
        ZytrixScripts[i].execute()
    end)
end

-- Add more script buttons to scroll through
ZytrixCombatScriptsSection.NewButton("Load More Combat Scripts", function()
    for i = 51, 100 do
        ZytrixCombatScriptsSection.NewButton("ZytrixHub Combat Script " .. i, function()
            notify("Combat Script", "Executed ZytrixHub Combat Script " .. i)
            ZytrixScripts[i].execute()
        end)
    end
    
    ZytrixCombatScriptsSection.NewButton("Load Even More Combat Scripts", function()
        for i = 101, 150 do
            ZytrixCombatScriptsSection.NewButton("ZytrixHub Combat Script " .. i, function()
                notify("Combat Script", "Executed ZytrixHub Combat Script " .. i)
                ZytrixScripts[i].execute()
            end)
        end
        
        ZytrixCombatScriptsSection.NewButton("Load Final Combat Scripts", function()
            for i = 151, 250 do
                ZytrixCombatScriptsSection.NewButton("ZytrixHub Combat Script " .. i, function()
                    notify("Combat Script", "Executed ZytrixHub Combat Script " .. i)
                    ZytrixScripts[i].execute()
                end)
            end
        end)
    end)
end)

-- ZytrixHub - Add 250 Visual Scripts
for i = 1, 50 do
    ZytrixVisualsScriptsSection.NewButton("ZytrixHub Visual Script " .. i, function()
        notify("Visual Script", "Executed ZytrixHub Visual Script " .. i)
        ZytrixScripts[250 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZytrixVisualsScriptsSection.NewButton("Load More Visual Scripts", function()
    for i = 51, 100 do
        ZytrixVisualsScriptsSection.NewButton("ZytrixHub Visual Script " .. i, function()
            notify("Visual Script", "Executed ZytrixHub Visual Script " .. i)
            ZytrixScripts[250 + i].execute()
        end)
    end
    
    ZytrixVisualsScriptsSection.NewButton("Load Even More Visual Scripts", function()
        for i = 101, 150 do
            ZytrixVisualsScriptsSection.NewButton("ZytrixHub Visual Script " .. i, function()
                notify("Visual Script", "Executed ZytrixHub Visual Script " .. i)
                ZytrixScripts[250 + i].execute()
            end)
        end
        
        ZytrixVisualsScriptsSection.NewButton("Load Final Visual Scripts", function()
            for i = 151, 250 do
                ZytrixVisualsScriptsSection.NewButton("ZytrixHub Visual Script " .. i, function()
                    notify("Visual Script", "Executed ZytrixHub Visual Script " .. i)
                    ZytrixScripts[250 + i].execute()
                end)
            end
        end)
    end)
end)

-- ZytrixHub - Add 250 Movement Scripts
for i = 1, 50 do
    ZytrixMovementScriptsSection.NewButton("ZytrixHub Movement Script " .. i, function()
        notify("Movement Script", "Executed ZytrixHub Movement Script " .. i)
        ZytrixScripts[500 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZytrixMovementScriptsSection.NewButton("Load More Movement Scripts", function()
    for i = 51, 100 do
        ZytrixMovementScriptsSection.NewButton("ZytrixHub Movement Script " .. i, function()
            notify("Movement Script", "Executed ZytrixHub Movement Script " .. i)
            ZytrixScripts[500 + i].execute()
        end)
    end
    
    ZytrixMovementScriptsSection.NewButton("Load Even More Movement Scripts", function()
        for i = 101, 150 do
            ZytrixMovementScriptsSection.NewButton("ZytrixHub Movement Script " .. i, function()
                notify("Movement Script", "Executed ZytrixHub Movement Script " .. i)
                ZytrixScripts[500 + i].execute()
            end)
        end
        
        ZytrixMovementScriptsSection.NewButton("Load Final Movement Scripts", function()
            for i = 151, 250 do
                ZytrixMovementScriptsSection.NewButton("ZytrixHub Movement Script " .. i, function()
                    notify("Movement Script", "Executed ZytrixHub Movement Script " .. i)
                    ZytrixScripts[500 + i].execute()
                end)
            end
        end)
    end)
end)

-- ZytrixHub - Add 250 Utility Scripts
for i = 1, 50 do
    ZytrixUtilityScriptsSection.NewButton("ZytrixHub Utility Script " .. i, function()
        notify("Utility Script", "Executed ZytrixHub Utility Script " .. i)
        ZytrixScripts[750 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZytrixUtilityScriptsSection.NewButton("Load More Utility Scripts", function()
    for i = 51, 100 do
        ZytrixUtilityScriptsSection.NewButton("ZytrixHub Utility Script " .. i, function()
            notify("Utility Script", "Executed ZytrixHub Utility Script " .. i)
            ZytrixScripts[750 + i].execute()
        end)
    end
    
    ZytrixUtilityScriptsSection.NewButton("Load Even More Utility Scripts", function()
        for i = 101, 150 do
            ZytrixUtilityScriptsSection.NewButton("ZytrixHub Utility Script " .. i, function()
                notify("Utility Script", "Executed ZytrixHub Utility Script " .. i)
                ZytrixScripts[750 + i].execute()
            end)
        end
        
        ZytrixUtilityScriptsSection.NewButton("Load Final Utility Scripts", function()
            for i = 151, 250 do
                ZytrixUtilityScriptsSection.NewButton("ZytrixHub Utility Script " .. i, function()
                    notify("Utility Script", "Executed ZytrixHub Utility Script " .. i)
                    ZytrixScripts[750 + i].execute()
                end)
            end
        end)
    end)
end)

-- ZytrixHub - Add 250 Fun Scripts
for i = 1, 50 do
    ZytrixFunScriptsSection.NewButton("ZytrixHub Fun Script " .. i, function()
        notify("Fun Script", "Executed ZytrixHub Fun Script " .. i)
        ZytrixScripts[1000 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZytrixFunScriptsSection.NewButton("Load More Fun Scripts", function()
    for i = 51, 100 do
        ZytrixFunScriptsSection.NewButton("ZytrixHub Fun Script " .. i, function()
            notify("Fun Script", "Executed ZytrixHub Fun Script " .. i)
            ZytrixScripts[1000 + i].execute()
        end)
    end
    
    ZytrixFunScriptsSection.NewButton("Load Even More Fun Scripts", function()
        for i = 101, 150 do
            ZytrixFunScriptsSection.NewButton("ZytrixHub Fun Script " .. i, function()
                notify("Fun Script", "Executed ZytrixHub Fun Script " .. i)
                ZytrixScripts[1000 + i].execute()
            end)
        end
        
        ZytrixFunScriptsSection.NewButton("Load Final Fun Scripts", function()
            for i = 151, 250 do
                ZytrixFunScriptsSection.NewButton("ZytrixHub Fun Script " .. i, function()
                    notify("Fun Script", "Executed ZytrixHub Fun Script " .. i)
                    ZytrixScripts[1000 + i].execute()
                end)
            end
        end)
    end)
end)

-- ==================== ZAVE HUB FEATURES (COMPLETELY DIFFERENT) ====================

-- ZaveHub - Gun Mods Section (ZaveHub Exclusive)
local infiniteAmmo = false
local noRecoil = false
local rapidFire = false
local bulletSpeedMultiplier = 1

ZaveGunModsSection.NewToggle("Infinite Ammo", "Never run out of ammunition", false, function(enabled)
    infiniteAmmo = enabled
    
    if enabled then
        RunService:BindToRenderStep("InfiniteAmmo", 10, function()
            for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
                if v:IsA("Tool") and v:FindFirstChild("Ammo") then
                    local maxAmmo = v:FindFirstChild("MaxAmmo")
                    if maxAmmo then
                        v.Ammo.Value = maxAmmo.Value
                    else
                        v.Ammo.Value = 999
                    end
                end
            end
            
            for _, v in pairs(LocalPlayer.Backpack:GetDescendants()) do
                if v:IsA("Tool") and v:FindFirstChild("Ammo") then
                    local maxAmmo = v:FindFirstChild("MaxAmmo")
                    if maxAmmo then
                        v.Ammo.Value = maxAmmo.Value
                    else
                        v.Ammo.Value = 999
                    end
                end
            end
        end)
    else
        RunService:UnbindFromRenderStep("InfiniteAmmo")
    end
end)

ZaveGunModsSection.NewToggle("No Recoil", "Removes gun recoil", false, function(enabled)
    noRecoil = enabled
    
    if enabled then
        local mt = getrawmetatable(game)
        local oldIndex = mt.__index
        setreadonly(mt, false)
        
        mt.__index = newcclosure(function(self, key)
            if noRecoil and key:lower() == "recoil" or key:lower() == "spread" or key:lower() == "kick" then
                return 0
            end
            return oldIndex(self, key)
        end)
        
        setreadonly(mt, true)
    end
end)

ZaveGunModsSection.NewToggle("Rapid Fire", "Increases fire rate of weapons", false, function(enabled)
    rapidFire = enabled
    
    if enabled then
        local mt = getrawmetatable(game)
        local oldIndex = mt.__index
        setreadonly(mt, false)
        
        mt.__index = newcclosure(function(self, key)
            if rapidFire and (key:lower() == "firerate" or key:lower() == "firedelay") then
                return 0.05
            end
            return oldIndex(self, key)
        end)
        
        setreadonly(mt, true)
    end
end)

ZaveGunModsSection.NewSlider("Bullet Speed", "Adjust bullet velocity multiplier", 10, 1, function(value)
    bulletSpeedMultiplier = value
    
    local mt = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    setreadonly(mt, false)
    
    mt.__namecall = newcclosure(function(self, ...)
        local args = {...}
        local method = getnamecallmethod()
        
        if method == "FireServer" and self.Name:lower():find("bullet") or self.Name:lower():find("fire") then
            -- Attempt to modify bullet velocity
            for i, v in pairs(args) do
                if typeof(v) == "Vector3" then
                    args[i] = v * bulletSpeedMultiplier
                end
            end
            return oldNamecall(self, unpack(args))
        end
        
        return oldNamecall(self, ...)
    end)
    
    setreadonly(mt, true)
end)

-- ZaveHub - Combat Tab - Fling Features (Same core functionality but different UI arrangement)
ZaveFlingSection.NewToggle("Aura Fling (10 stud range)", "Automatically flings nearby players", false, function(enabled)
    flingAuraEnabled = enabled
    
    if enabled then
        notify("Fling Aura", "Enabled with range of " .. flingAuraRange .. " studs")
        
        RunService:BindToRenderStep("FlingAura", 100, function()
            if flingDebounce then return end
            
            local target, distance = getNearestPlayer(flingAuraRange)
            if target then
                flingPlayer(target)
            end
        end)
    else
        RunService:UnbindFromRenderStep("FlingAura")
        notify("Fling Aura", "Disabled")
    end
end)

ZaveFlingSection.NewToggle("Touch Fling", "Flings players when you touch them", false, function(enabled)
    touchFlingEnabled = enabled
    
    if enabled then
        notify("Touch Fling", "Touch players to fling them")
        
        local function handleTouched(hit)
            if not touchFlingEnabled then return end
            
            local character = hit:FindFirstAncestorOfClass("Model")
            if not character then return end
            
            local player = Players:GetPlayerFromCharacter(character)
            if not player or player == LocalPlayer then return end
            
            flingPlayer(player)
        end
        
        -- Connect touch event
        local touchConnection
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            touchConnection = LocalPlayer.Character.HumanoidRootPart.Touched:Connect(handleTouched)
        end
        
        -- Handle character respawn
        local characterAddedConnection
        characterAddedConnection = LocalPlayer.CharacterAdded:Connect(function(char)
            wait(1) -- Wait for character to be fully loaded
            if touchConnection then touchConnection:Disconnect() end
            
            if touchFlingEnabled and char:FindFirstChild("HumanoidRootPart") then
                touchConnection = char.HumanoidRootPart.Touched:Connect(handleTouched)
            end
        end)
    else
        notify("Touch Fling", "Disabled")
        
        -- Disconnect touch event
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            for _, connection in pairs(getconnections(LocalPlayer.Character.HumanoidRootPart.Touched)) do
                connection:Disconnect()
            end
        end
    end
end)

ZaveFlingSection.NewToggle("Click Fling", "Flings players when you click on them", false, function(enabled)
    clickFlingEnabled = enabled
    
    if enabled then
        notify("Click Fling", "Click on players to fling them")
        
        -- Create mouse click connection
        Mouse.Button1Down:Connect(function()
            if not clickFlingEnabled then return end
            
            local target = Mouse.Target
            if not target then return end
            
            local character = target:FindFirstAncestorOfClass("Model")
            if not character then return end
            
            local player = Players:GetPlayerFromCharacter(character)
            if not player or player == LocalPlayer then return end
            
            flingPlayer(player)
        end)
    else
        notify("Click Fling", "Disabled")
    end
end)

ZaveFlingSection.NewToggle("Fling All", "Flings all players in the server", false, function(enabled)
    flingingAll = enabled
    
    if enabled then
        notify("Fling All", "Flinging all players (this might cause lag)")
        
        spawn(function()
            while flingingAll do
                for _, player in pairs(getAllPlayers(true)) do
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        flingPlayer(player)
                        wait(1) -- Wait between flings to reduce lag
                    end
                end
                wait(1)
            end
        end)
    else
        notify("Fling All", "Disabled")
    end
end)

ZaveFlingSection.NewSlider("Fling Power", "Adjust how powerful flings are", 30000, 1000, function(value)
    flingPower = value
    notify("Fling Power", "Set to " .. value)
end)

ZaveFlingSection.NewSlider("Fling Aura Range", "Adjust the fling aura radius", 50, 1, function(value)
    flingAuraRange = value
    notify("Fling Aura Range", "Set to " .. value .. " studs")
end)

-- ZaveHub - World Visuals Section (ZaveHub Exclusive)
local fullbright = false
local noFog = false
local customSkybox = false
local timeOfDay = "Default"

ZaveWorldVisualsSection.NewToggle("Fullbright", "Makes everything bright", false, function(enabled)
    fullbright = enabled
    
    if enabled then
        -- Store original lighting properties
        local originalAmbient = Lighting.Ambient
        local originalBrightness = Lighting.Brightness
        local originalClockTime = Lighting.ClockTime
        local originalFogEnd = Lighting.FogEnd
        local originalGlobalShadows = Lighting.GlobalShadows
        
        -- Apply fullbright
        Lighting.Ambient = Color3.fromRGB(255, 255, 255)
        Lighting.Brightness = 2
        Lighting.ClockTime = 14
        Lighting.FogEnd = 100000
        Lighting.GlobalShadows = false
        
        -- Create a point light to the player
        local pointLight = Instance.new("PointLight")
        pointLight.Name = "ZaveHubFullbright"
        pointLight.Brightness = 1
        pointLight.Range = 100
        pointLight.Parent = LocalPlayer.Character.HumanoidRootPart
        
        -- Restore on disable
        RunService:BindToRenderStep("Fullbright", 100, function()
            if not fullbright then
                Lighting.Ambient = originalAmbient
                Lighting.Brightness = originalBrightness
                Lighting.ClockTime = originalClockTime
                Lighting.FogEnd = originalFogEnd
                Lighting.GlobalShadows = originalGlobalShadows
                if LocalPlayer.Character.HumanoidRootPart:FindFirstChild("ZaveHubFullbright") then
                    LocalPlayer.Character.HumanoidRootPart.ZaveHubFullbright:Destroy()
                end
                RunService:UnbindFromRenderStep("Fullbright")
            end
        end)
    else
        -- The unbinding happens in the above RunService
    end
end)

ZaveWorldVisualsSection.NewToggle("No Fog", "Removes fog from the game", false, function(enabled)
    noFog = enabled
    
    if enabled then
        local originalFogStart = Lighting.FogStart
        local originalFogEnd = Lighting.FogEnd
        
        Lighting.FogStart = 100000
        Lighting.FogEnd = 100000
        
        RunService:BindToRenderStep("NoFog", 100, function()
            if not noFog then
                Lighting.FogStart = originalFogStart
                Lighting.FogEnd = originalFogEnd
                RunService:UnbindFromRenderStep("NoFog")
            end
        end)
    else
        -- The unbinding happens in the above RunService
    end
end)

ZaveWorldVisualsSection.NewToggle("Custom Skybox", "Changes the skybox", false, function(enabled)
    customSkybox = enabled
    
    if enabled then
        -- First, remove any existing skybox
        for i, v in pairs(Lighting:GetChildren()) do
            if v:IsA("Sky") then
                v:Destroy()
            end
        end
        
        -- Create a new skybox
        local sky = Instance.new("Sky")
        sky.Name = "ZaveHubSkybox"
        sky.SkyboxBk = "rbxassetid://271042516"
        sky.SkyboxDn = "rbxassetid://271077243"
        sky.SkyboxFt = "rbxassetid://271042556"
        sky.SkyboxLf = "rbxassetid://271042310"
        sky.SkyboxRt = "rbxassetid://271042467"
        sky.SkyboxUp = "rbxassetid://271077958"
        sky.Parent = Lighting
    else
        -- Remove custom skybox
        for i, v in pairs(Lighting:GetChildren()) do
            if v:IsA("Sky") and v.Name == "ZaveHubSkybox" then
                v:Destroy()
            end
        end
    end
end)

ZaveWorldVisualsSection.NewDropdown("Time of Day", "Change the time of day", {"Default", "Day", "Night", "Sunset", "Sunrise"}, function(selected)
    timeOfDay = selected
    
    if selected == "Default" then
        -- Do nothing, let the game control the time
    elseif selected == "Day" then
        Lighting.ClockTime = 14
    elseif selected == "Night" then
        Lighting.ClockTime = 0
    elseif selected == "Sunset" then
        Lighting.ClockTime = 18
    elseif selected == "Sunrise" then
        Lighting.ClockTime = 6
    end
end)

-- ZaveHub - Vehicle Mods Section (ZaveHub Exclusive)
local vehicleSpeedMultiplier = 1
local vehicleJumpHeight = 0
local vehicleAutoFlip = false
local vehicleNoFallDamage = false

ZaveVehicleSection.NewToggle("Vehicle Speed Boost", "Increases vehicle speed", false, function(enabled)
    RunService:UnbindFromRenderStep("VehicleSpeedBoost")
    if enabled then
        RunService:BindToRenderStep("VehicleSpeedBoost", 100, function()
            local vehicle = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").SeatPart
            if vehicle and vehicle:IsA("VehicleSeat") then
                local body = vehicle:FindFirstAncestorOfClass("Model")
                if body then
                    for _, v in pairs(body:GetDescendants()) do
                        if v:IsA("BodyVelocity") or v:IsA("BodyGyro") then
                            -- Increase the vehicle's velocity
                            if v:IsA("BodyVelocity") then
                                v.MaxForce = v.MaxForce * vehicleSpeedMultiplier
                                v.Velocity = v.Velocity * vehicleSpeedMultiplier
                            end
                        end
                    end
                    
                    -- Also try to modify the vehicle's speed directly
                    if body:FindFirstChild("Engine") then
                        local engine = body:FindFirstChild("Engine")
                        if engine:FindFirstChild("Torque") then
                            engine.Torque.Value = engine.Torque.Value * vehicleSpeedMultiplier
                        end
                        if engine:FindFirstChild("MaxSpeed") then
                            engine.MaxSpeed.Value = engine.MaxSpeed.Value * vehicleSpeedMultiplier
                        end
                    end
                end
            end
        end)
    end
end)

ZaveVehicleSection.NewSlider("Vehicle Speed Multiplier", "Adjust vehicle speed multiplier", 5, 1, function(value)
    vehicleSpeedMultiplier = value
end)

ZaveVehicleSection.NewToggle("Vehicle Jump", "Allows vehicles to jump", false, function(enabled)
    RunService:UnbindFromRenderStep("VehicleJump")
    if enabled then
        -- Listen for space key
        UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if input.KeyCode == Enum.KeyCode.Space and not gameProcessed then
                local vehicle = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").SeatPart
                if vehicle and vehicle:IsA("VehicleSeat") then
                    local body = vehicle:FindFirstAncestorOfClass("Model")
                    if body then
                        -- Apply upward force
                        for _, v in pairs(body:GetDescendants()) do
                            if v:IsA("BasePart") then
                                local jumpForce = Instance.new("BodyVelocity")
                                jumpForce.Velocity = Vector3.new(0, vehicleJumpHeight, 0)
                                jumpForce.MaxForce = Vector3.new(0, 100000, 0)
                                jumpForce.Parent = v
                                
                                -- Remove the jump force after a short time
                                game:GetService("Debris"):AddItem(jumpForce, 0.3)
                            end
                        end
                    end
                end
            end
        end)
    end
end)

ZaveVehicleSection.NewSlider("Vehicle Jump Height", "Adjust vehicle jump height", 100, 0, function(value)
    vehicleJumpHeight = value
end)

ZaveVehicleSection.NewToggle("Auto Flip Vehicle", "Automatically flips overturned vehicles", false, function(enabled)
    vehicleAutoFlip = enabled
    
    RunService:UnbindFromRenderStep("VehicleAutoFlip")
    if enabled then
        RunService:BindToRenderStep("VehicleAutoFlip", 100, function()
            local vehicle = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").SeatPart
            if vehicle and vehicle:IsA("VehicleSeat") then
                local body = vehicle:FindFirstAncestorOfClass("Model")
                if body then
                    -- Check if vehicle is upside down
                    local primaryPart = body.PrimaryPart or vehicle
                    if primaryPart.CFrame.UpVector.Y < 0 then
                        -- Flip the vehicle
                        local newCFrame = CFrame.new(primaryPart.Position) * CFrame.Angles(0, primaryPart.CFrame.lookVector.Y, 0)
                        primaryPart.CFrame = newCFrame + Vector3.new(0, 3, 0) -- Lift it slightly
                    end
                end
            end
        end)
    end
end)

-- ZaveHub - Auto Farm Section (ZaveHub Exclusive)
local autoFarmEnabled = false
local autoFarmTarget = "Nearest"
local autoFarmDistance = 10

ZaveAutoFarmSection.NewToggle("Auto Farm", "Automatically farms resources or enemies", false, function(enabled)
    autoFarmEnabled = enabled
    
    if enabled then
        RunService:BindToRenderStep("AutoFarm", 100, function()
            if autoFarmTarget == "Nearest" then
                -- Try to find the nearest NPC or resource
                local closestNPC = nil
                local closestDistance = math.huge
                
                for _, v in pairs(workspace:GetDescendants()) do
                    -- Look for common NPC patterns
                    if (v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart")) or
                       (v:IsA("Model") and v.Name:lower():find("npc")) or
                       (v:IsA("Model") and v.Name:lower():find("enemy")) or
                       (v:IsA("Model") and v.Name:lower():find("mob")) then
                        
                        if v:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            local distance = (v.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance < closestDistance and distance < autoFarmDistance then
                                closestNPC = v
                                closestDistance = distance
                            end
                        end
                    end
                    
                    -- Look for resources
                    if (v:IsA("BasePart") and (v.Name:lower():find("ore") or v.Name:lower():find("resource") or v.Name:lower():find("gold") or v.Name:lower():find("diamond"))) then
                        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            local distance = (v.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance < closestDistance and distance < autoFarmDistance then
                                closestNPC = v
                                closestDistance = distance
                            end
                        end
                    end
                end
                
                -- If we found a target, move to it and attack
                if closestNPC then
                    -- Move to target
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local targetPosition = closestNPC:IsA("BasePart") and closestNPC.Position or closestNPC.HumanoidRootPart.Position
                        LocalPlayer.Character.Humanoid:MoveTo(targetPosition)
                        
                        -- If close enough, attack
                        if (targetPosition - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 5 then
                            -- Try to find and use a tool
                            if LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                                local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                                if tool:FindFirstChild("RemoteClick") then
                                    tool.RemoteClick:FireServer(closestNPC)
                                elseif tool:FindFirstChild("Attack") then
                                    tool.Attack:FireServer(closestNPC)
                                end
                            else
                                -- Try to equip a tool from backpack
                                for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
                                    if tool:IsA("Tool") then
                                        LocalPlayer.Character.Humanoid:EquipTool(tool)
                                        break
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
    else
        RunService:UnbindFromRenderStep("AutoFarm")
    end
end)

ZaveAutoFarmSection.NewDropdown("Auto Farm Target", "Select what to farm", {"Nearest", "NPCs", "Resources", "Players"}, function(selected)
    autoFarmTarget = selected
end)

ZaveAutoFarmSection.NewSlider("Auto Farm Distance", "Maximum distance to search for targets", 100, 10, function(value)
    autoFarmDistance = value
end)

-- ZaveHub - Protection Features (ZaveHub Exclusive)
local antiKickEnabled = false
local antiAfkEnabled = false
local antiReportEnabled = false

ZaveProtectionSection.NewToggle("Anti-Kick", "Attempts to prevent being kicked", false, function(enabled)
    antiKickEnabled = enabled
    
    if enabled then
        -- Try to hook the kick function
        local oldKick
        oldKick = hookfunction(LocalPlayer.Kick, function(...)
            if antiKickEnabled then
                notify("Anti-Kick", "Blocked attempt to kick")
                return nil
            end
            return oldKick(...)
        end)
        
        -- Try to protect against other kick methods
        local mt = getrawmetatable(game)
        local oldNamecall = mt.__namecall
        setreadonly(mt, false)
        
        mt.__namecall = newcclosure(function(self, ...)
            local method = getnamecallmethod()
            if antiKickEnabled and method == "Kick" and self == LocalPlayer then
                notify("Anti-Kick", "Blocked namecall kick attempt")
                return nil
            end
            return oldNamecall(self, ...)
        end)
        
        setreadonly(mt, true)
    end
end)

ZaveProtectionSection.NewToggle("Anti-AFK", "Prevents being kicked for inactivity", false, function(enabled)
    antiAfkEnabled = enabled
    
    if enabled then
        local virtualUser = game:GetService("VirtualUser")
        
        -- Connect to the Idled event
        local antiAFKConnection
        antiAFKConnection = game:GetService("Players").LocalPlayer.Idled:Connect(function()
            virtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            wait(1)
            virtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            notify("Anti-AFK", "Prevented AFK kick")
        end)
    else
        -- Disconnect from Idled event
        for _, connection in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
            connection:Disconnect()
        end
    end
end)

ZaveProtectionSection.NewToggle("Anti-Report", "Attempts to block reporting", false, function(enabled)
    antiReportEnabled = enabled
    
    if enabled then
        -- Try to hook the report remote
        for _, v in pairs(game:GetDescendants()) do
            if v:IsA("RemoteEvent") and (v.Name:lower():find("report") or v.Name:lower():find("abuse")) then
                local oldFireServer = v.FireServer
                v.FireServer = function(...)
                    if antiReportEnabled then
                        notify("Anti-Report", "Blocked report attempt")
                        return nil
                    end
                    return oldFireServer(...)
                end
            end
        end
        
        -- Hook future remotes
        game.DescendantAdded:Connect(function(v)
            if v:IsA("RemoteEvent") and (v.Name:lower():find("report") or v.Name:lower():find("abuse")) then
                local oldFireServer = v.FireServer
                v.FireServer = function(...)
                    if antiReportEnabled then
                        notify("Anti-Report", "Blocked report attempt")
                        return nil
                    end
                    return oldFireServer(...)
                end
            end
        end)
    end
end)

-- ZaveHub - Add 250 Combat Scripts (Different from ZytrixHub)
for i = 1, 50 do
    ZaveCombatScriptsSection.NewButton("ZaveHub Combat Script " .. i, function()
        notify("Combat Script", "Executed ZaveHub Combat Script " .. i)
        ZaveScripts[i].execute()
    end)
end

-- Add more script buttons to scroll through
ZaveCombatScriptsSection.NewButton("Load More Combat Scripts", function()
    for i = 51, 100 do
        ZaveCombatScriptsSection.NewButton("ZaveHub Combat Script " .. i, function()
            notify("Combat Script", "Executed ZaveHub Combat Script " .. i)
            ZaveScripts[i].execute()
        end)
    end
    
    ZaveCombatScriptsSection.NewButton("Load Even More Combat Scripts", function()
        for i = 101, 150 do
            ZaveCombatScriptsSection.NewButton("ZaveHub Combat Script " .. i, function()
                notify("Combat Script", "Executed ZaveHub Combat Script " .. i)
                ZaveScripts[i].execute()
            end)
        end
        
        ZaveCombatScriptsSection.NewButton("Load Final Combat Scripts", function()
            for i = 151, 250 do
                ZaveCombatScriptsSection.NewButton("ZaveHub Combat Script " .. i, function()
                    notify("Combat Script", "Executed ZaveHub Combat Script " .. i)
                    ZaveScripts[i].execute()
                end)
            end
        end)
    end)
end)

-- ZaveHub - Add 250 Visual Scripts (Different from ZytrixHub)
for i = 1, 50 do
    ZaveVisualsScriptsSection.NewButton("ZaveHub Visual Script " .. i, function()
        notify("Visual Script", "Executed ZaveHub Visual Script " .. i)
        ZaveScripts[250 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZaveVisualsScriptsSection.NewButton("Load More Visual Scripts", function()
    for i = 51, 100 do
        ZaveVisualsScriptsSection.NewButton("ZaveHub Visual Script " .. i, function()
            notify("Visual Script", "Executed ZaveHub Visual Script " .. i)
            ZaveScripts[250 + i].execute()
        end)
    end
    
    ZaveVisualsScriptsSection.NewButton("Load Even More Visual Scripts", function()
        for i = 101, 150 do
            ZaveVisualsScriptsSection.NewButton("ZaveHub Visual Script " .. i, function()
                notify("Visual Script", "Executed ZaveHub Visual Script " .. i)
                ZaveScripts[250 + i].execute()
            end)
        end
        
        ZaveVisualsScriptsSection.NewButton("Load Final Visual Scripts", function()
            for i = 151, 250 do
                ZaveVisualsScriptsSection.NewButton("ZaveHub Visual Script " .. i, function()
                    notify("Visual Script", "Executed ZaveHub Visual Script " .. i)
                    ZaveScripts[250 + i].execute()
                end)
            end
        end)
    end)
end)

-- ZaveHub - Add 250 Movement Scripts (Different from ZytrixHub)
for i = 1, 50 do
    ZaveMovementScriptsSection.NewButton("ZaveHub Movement Script " .. i, function()
        notify("Movement Script", "Executed ZaveHub Movement Script " .. i)
        ZaveScripts[500 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZaveMovementScriptsSection.NewButton("Load More Movement Scripts", function()
    for i = 51, 100 do
        ZaveMovementScriptsSection.NewButton("ZaveHub Movement Script " .. i, function()
            notify("Movement Script", "Executed ZaveHub Movement Script " .. i)
            ZaveScripts[500 + i].execute()
        end)
    end
    
    ZaveMovementScriptsSection.NewButton("Load Even More Movement Scripts", function()
        for i = 101, 150 do
            ZaveMovementScriptsSection.NewButton("ZaveHub Movement Script " .. i, function()
                notify("Movement Script", "Executed ZaveHub Movement Script " .. i)
                ZaveScripts[500 + i].execute()
            end)
        end
        
        ZaveMovementScriptsSection.NewButton("Load Final Movement Scripts", function()
            for i = 151, 250 do
                ZaveMovementScriptsSection.NewButton("ZaveHub Movement Script " .. i, function()
                    notify("Movement Script", "Executed ZaveHub Movement Script " .. i)
                    ZaveScripts[500 + i].execute()
                end)
            end
        end)
    end)
end)

-- ZaveHub - Add 250 Utility Scripts (Different from ZytrixHub)
for i = 1, 50 do
    ZaveUtilityScriptsSection.NewButton("ZaveHub Utility Script " .. i, function()
        notify("Utility Script", "Executed ZaveHub Utility Script " .. i)
        ZaveScripts[750 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZaveUtilityScriptsSection.NewButton("Load More Utility Scripts", function()
    for i = 51, 100 do
        ZaveUtilityScriptsSection.NewButton("ZaveHub Utility Script " .. i, function()
            notify("Utility Script", "Executed ZaveHub Utility Script " .. i)
            ZaveScripts[750 + i].execute()
        end)
    end
    
    ZaveUtilityScriptsSection.NewButton("Load Even More Utility Scripts", function()
        for i = 101, 150 do
            ZaveUtilityScriptsSection.NewButton("ZaveHub Utility Script " .. i, function()
                notify("Utility Script", "Executed ZaveHub Utility Script " .. i)
                ZaveScripts[750 + i].execute()
            end)
        end
        
        ZaveUtilityScriptsSection.NewButton("Load Final Utility Scripts", function()
            for i = 151, 250 do
                ZaveUtilityScriptsSection.NewButton("ZaveHub Utility Script " .. i, function()
                    notify("Utility Script", "Executed ZaveHub Utility Script " .. i)
                    ZaveScripts[750 + i].execute()
                end)
            end
        end)
    end)
end)

-- ZaveHub - Add 250 Fun Scripts (Different from ZytrixHub)
for i = 1, 50 do
    ZaveFunScriptsSection.NewButton("ZaveHub Fun Script " .. i, function()
        notify("Fun Script", "Executed ZaveHub Fun Script " .. i)
        ZaveScripts[1000 + i].execute()
    end)
end

-- Add more script buttons to scroll through
ZaveFunScriptsSection.NewButton("Load More Fun Scripts", function()
    for i = 51, 100 do
        ZaveFunScriptsSection.NewButton("ZaveHub Fun Script " .. i, function()
            notify("Fun Script", "Executed ZaveHub Fun Script " .. i)
            ZaveScripts[1000 + i].execute()
        end)
    end
    
    ZaveFunScriptsSection.NewButton("Load Even More Fun Scripts", function()
        for i = 101, 150 do
            ZaveFunScriptsSection.NewButton("ZaveHub Fun Script " .. i, function()
                notify("Fun Script", "Executed ZaveHub Fun Script " .. i)
                ZaveScripts[1000 + i].execute()
            end)
        end
        
        ZaveFunScriptsSection.NewButton("Load Final Fun Scripts", function()
            for i = 151, 250 do
                ZaveFunScriptsSection.NewButton("ZaveHub Fun Script " .. i, function()
                    notify("Fun Script", "Executed ZaveHub Fun Script " .. i)
                    ZaveScripts[1000 + i].execute()
                end)
            end
        end)
    end)
end)

-- ==================== ESP FEATURES (COMMON TO BOTH HUBS) ====================

-- ESP Variables
local espEnabled = false
local espBoxes = false
local espNames = false
local espDistance = false
local espHealth = false
local espTracers = false
local espTeamCheck = false
local espTeamColor = false

-- ESP Function
local function createESP()
    if espEnabled then
        notify("ESP", "Enabled")
        
        -- Create ESP objects for all players
        for _, player in pairs(getAllPlayers(true)) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                -- Create ESP elements for each player
                local billboard = Instance.new("BillboardGui")
                billboard.Name = "ESP_" .. player.Name
                billboard.AlwaysOnTop = true
                billboard.Size = UDim2.new(0, 200, 0, 50)
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.Adornee = player.Character.HumanoidRootPart
                
                local nameLabel = Instance.new("TextLabel")
                nameLabel.Name = "NameLabel"
                nameLabel.BackgroundTransparency = 1
                nameLabel.Size = UDim2.new(1, 0, 0, 20)
                nameLabel.Text = player.Name
                nameLabel.TextColor3 = Color3.new(1, 1, 1)
                nameLabel.Font = Enum.Font.GothamBold
                nameLabel.TextSize = 14
                nameLabel.Parent = billboard
                
                -- Add more ESP elements as needed
                
                billboard.Parent = player.Character.HumanoidRootPart
            end
        end
        
        -- Update ESP in render step
        RunService:BindToRenderStep("ESP", 200, function()
            for _, player in pairs(getAllPlayers(true)) do
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local esp = player.Character.HumanoidRootPart:FindFirstChild("ESP_" .. player.Name)
                    if esp then
                        -- Update ESP information (distance, health, etc.)
                        local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        local nameLabel = esp:FindFirstChild("NameLabel")
                        
                        if nameLabel and espNames then
                            local displayText = player.Name
                            
                            if espDistance then
                                displayText = displayText .. " [" .. math.floor(distance) .. "m]"
                            end
                            
                            if espHealth and player.Character:FindFirstChild("Humanoid") then
                                displayText = displayText .. " [" .. math.floor(player.Character.Humanoid.Health) .. "/" .. math.floor(player.Character.Humanoid.MaxHealth) .. "]"
                            end
                            
                            nameLabel.Text = displayText
                        end
                    end
                end
            end
        end)
    else
        notify("ESP", "Disabled")
        RunService:UnbindFromRenderStep("ESP")
        
        -- Remove all ESP objects
        for _, player in pairs(getAllPlayers(true)) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local esp = player.Character.HumanoidRootPart:FindFirstChild("ESP_" .. player.Name)
                if esp then
                    esp:Destroy()
                end
            end
        end
    end
end

-- Add ESP controls to both hubs (similar functionality but separate toggle states)
ZytrixEspSection.NewToggle("ESP Enabled", "Toggle ESP features", false, function(enabled)
    espEnabled = enabled
    createESP()
end)

ZytrixEspSection.NewToggle("Show Names", "Show player names in ESP", true, function(enabled)
    espNames = enabled
end)

ZytrixEspSection.NewToggle("Show Boxes", "Show boxes around players", true, function(enabled)
    espBoxes = enabled
end)

ZytrixEspSection.NewToggle("Show Distance", "Show distance to players", true, function(enabled)
    espDistance = enabled
end)

ZytrixEspSection.NewToggle("Show Health", "Show player health in ESP", true, function(enabled)
    espHealth = enabled
end)

ZytrixEspSection.NewToggle("Show Tracers", "Show lines to players", false, function(enabled)
    espTracers = enabled
end)

ZaveEspSection.NewToggle("ESP Enabled", "Toggle ESP features", false, function(enabled)
    espEnabled = enabled
    createESP()
end)

ZaveEspSection.NewToggle("Show Names", "Show player names in ESP", true, function(enabled)
    espNames = enabled
end)

ZaveEspSection.NewToggle("Show Boxes", "Show boxes around players", true, function(enabled)
    espBoxes = enabled
end)

ZaveEspSection.NewToggle("Show Distance", "Show distance to players", true, function(enabled)
    espDistance = enabled
end)

ZaveEspSection.NewToggle("Show Health", "Show player health in ESP", true, function(enabled)
    espHealth = enabled
end)

ZaveEspSection.NewToggle("Show Tracers", "Show lines to players", false, function(enabled)
    espTracers = enabled
end)

-- ==================== MOVEMENT FEATURES ====================

-- Speed hack variables
local speedEnabled = false
local speedValue = 16
local jumpPowerEnabled = false
local jumpPowerValue = 50
local infiniteJumpEnabled = false
local flightEnabled = false
local noclipEnabled = false

-- Speed hack function
local function updateSpeed()
    if speedEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = speedValue
    else
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end
end

-- Jump power function
local function updateJumpPower()
    if jumpPowerEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
    else
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end
end

-- Infinite jump function
local function setupInfiniteJump()
    UserInputService.JumpRequest:Connect(function()
        if infiniteJumpEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
end

-- Flight function
local function updateFlight()
    if flightEnabled then
        notify("Flight", "Enabled")
        
        local flySpeed = 2
        local flyBind = Enum.KeyCode.F
        
        local cam = workspace.CurrentCamera
        local connection
        local keys = {a = false, d = false, w = false, s = false}
        
        RunService:BindToRenderStep("Flight", 100, function()
            if not LocalPlayer.Character or not flightEnabled then return end
            
            local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
            
            if not humanoidRootPart or not humanoid then return end
            
            humanoid:ChangeState(Enum.HumanoidStateType.Physics)
            
            if keys.w then
                humanoidRootPart.CFrame = humanoidRootPart.CFrame + cam.CFrame.LookVector * flySpeed
            end
            
            if keys.s then
                humanoidRootPart.CFrame = humanoidRootPart.CFrame - cam.CFrame.LookVector * flySpeed
            end
            
            if keys.a then
                humanoidRootPart.CFrame = humanoidRootPart.CFrame - cam.CFrame.RightVector * flySpeed
            end
            
            if keys.d then
                humanoidRootPart.CFrame = humanoidRootPart.CFrame + cam.CFrame.RightVector * flySpeed
            end
            
            humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end)
        
        connection = UserInputService.InputBegan:Connect(function(input, processed)
            if processed then return end
            
            if input.KeyCode == Enum.KeyCode.W then
                keys.w = true
            elseif input.KeyCode == Enum.KeyCode.S then
                keys.s = true
            elseif input.KeyCode == Enum.KeyCode.A then
                keys.a = true
            elseif input.KeyCode == Enum.KeyCode.D then
                keys.d = true
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input, processed)
            if processed then return end
            
            if input.KeyCode == Enum.KeyCode.W then
                keys.w = false
            elseif input.KeyCode == Enum.KeyCode.S then
                keys.s = false
            elseif input.KeyCode == Enum.KeyCode.A then
                keys.a = false
            elseif input.KeyCode == Enum.KeyCode.D then
                keys.d = false
            end
        end)
    else
        notify("Flight", "Disabled")
        RunService:UnbindFromRenderStep("Flight")
    end
end

-- Noclip function
local function updateNoclip()
    if noclipEnabled then
        notify("Noclip", "Enabled")
        
        RunService:BindToRenderStep("Noclip", 100, function()
            if LocalPlayer.Character then
                for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        notify("Noclip", "Disabled")
        RunService:UnbindFromRenderStep("Noclip")
        
        if LocalPlayer.Character then
            for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- Add speed controls to both hubs (similar functionality but with different UI arrangement)
ZytrixSpeedSection.NewToggle("Speed Hack", "Enable speed hack", false, function(enabled)
    speedEnabled = enabled
    updateSpeed()
end)

ZytrixSpeedSection.NewSlider("Speed Value", "Adjust speed value", 500, 16, function(value)
    speedValue = value
    if speedEnabled then
        updateSpeed()
    end
end)

ZytrixJumpSection.NewToggle("Jump Power", "Enable jump power adjustment", false, function(enabled)
    jumpPowerEnabled = enabled
    updateJumpPower()
end)

ZytrixJumpSection.NewSlider("Jump Power Value", "Adjust jump power value", 500, 50, function(value)
    jumpPowerValue = value
    if jumpPowerEnabled then
        updateJumpPower()
    end
end)

ZytrixJumpSection.NewToggle("Infinite Jump", "Enable infinite jump", false, function(enabled)
    infiniteJumpEnabled = enabled
    setupInfiniteJump()
end)

ZytrixMovementTab.NewSection("Flight & Noclip")
ZytrixMovementTab.NewToggle("Flight", "Enable flight (WASD to move)", false, function(enabled)
    flightEnabled = enabled
    updateFlight()
end)

ZytrixMovementTab.NewToggle("Noclip", "Walk through walls", false, function(enabled)
    noclipEnabled = enabled
    updateNoclip()
end)

-- Add same controls to ZaveHub (different arrangement)
ZaveSpeedSection.NewToggle("Speed Hack", "Enable speed hack", false, function(enabled)
    speedEnabled = enabled
    updateSpeed()
end)

ZaveSpeedSection.NewSlider("Speed Value", "Adjust speed value", 500, 16, function(value)
    speedValue = value
    if speedEnabled then
        updateSpeed()
    end
end)

-- ZaveHub uses the Flight section instead of Jump section (different layout)
ZaveFlySection.NewToggle("Flight", "Enable flight (WASD to move)", false, function(enabled)
    flightEnabled = enabled
    updateFlight()
end)

ZaveFlySection.NewToggle("Noclip", "Walk through walls", false, function(enabled)
    noclipEnabled = enabled
    updateNoclip()
end)

ZaveFlySection.NewToggle("Infinite Jump", "Enable infinite jump", false, function(enabled)
    infiniteJumpEnabled = enabled
    setupInfiniteJump()
end)

-- ==================== DIAMOND BUTTON ====================

-- Create the diamond-shaped draggable button for ESP toggle
local function createDiamondButton()
    local diamondButton = Instance.new("ScreenGui")
    diamondButton.Name = "DiamondButton"
    diamondButton.Parent = game.CoreGui
    
    local button = Instance.new("Frame")
    button.Name = "Button"
    button.Size = UDim2.new(0, 60, 0, 60)
    button.Position = UDim2.new(0.9, 0, 0.5, 0)
    button.AnchorPoint = Vector2.new(0.5, 0.5)
    button.BackgroundTransparency = 0.2
    button.BorderSizePixel = 0
    button.Parent = diamondButton
    
    -- Rotate frame to make it diamond-shaped
    button.Rotation = 45
    
    -- Create a UICorner to make it diamond-shaped with smoother edges
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.2, 0)
    corner.Parent = button
    
    -- Add rainbow animation effect
    spawn(function()
        while wait() do
            for i = 0, 1, 0.01 do
                button.BackgroundColor3 = Color3.fromHSV(i, 1, 1)
                wait(0.05)
            end
        end
    end)
    
    -- Add button functionality (toggle ESP)
    local dragging = false
    local dragStartPos, startPos
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStartPos = input.Position
            startPos = button.Position
        end
    end)
    
    button.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStartPos
            button.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X,
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    button.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if (input.Position - dragStartPos).Magnitude < 5 then
                -- It's a click, not a drag
                espEnabled = not espEnabled
                createESP()
                
                -- Visual feedback
                local originalSize = button.Size
                button:TweenSize(UDim2.new(0, 50, 0, 50), "Out", "Quad", 0.1, true, function()
                    button:TweenSize(originalSize, "Out", "Quad", 0.1, true)
                end)
            end
            dragging = false
        end
    end)
    
    return diamondButton
end

-- Create the diamond button
local diamondBtn = createDiamondButton()

-- ==================== INITIALIZATION ====================

-- Initialize character
if not LocalPlayer.Character then
    LocalPlayer.CharacterAdded:Wait()
end

-- Setup player respawn handling
LocalPlayer.CharacterAdded:Connect(function(character)
    wait(1)
    
    -- Update all features when character respawns
    if speedEnabled then updateSpeed() end
    if jumpPowerEnabled then updateJumpPower() end
    if flightEnabled then updateFlight() end
    if noclipEnabled then updateNoclip() end
    if espEnabled then createESP() end
end)

-- Initialize Infinite Jump
setupInfiniteJump()