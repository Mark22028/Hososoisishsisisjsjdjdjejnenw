local SettingsIcon = Instance.new("ImageButton")
SettingsIcon.Name = "SettingsIcon"
SettingsIcon.Size = UDim2.new(0, 40, 0, 40)
SettingsIcon.Position = UDim2.new(1, -60, 0, 20)
SettingsIcon.BackgroundTransparency = 0.5
SettingsIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
SettingsIcon.Image = "rbxassetid://7734053495"
SettingsIcon.Parent = ScreenGui

local IconCorner = Instance.new("UICorner")
IconCorner.CornerRadius = UDim.new(1, 0)
IconCorner.Parent = SettingsIcon

local SettingsPanel = Instance.new("Frame")
SettingsPanel.Name = "SettingsPanel"
SettingsPanel.Size = UDim2.new(0, 300, 0, 400)
SettingsPanel.Position = UDim2.new(0.5, -150, 0.5, -200)
SettingsPanel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SettingsPanel.BorderSizePixel = 0
SettingsPanel.Visible = false
SettingsPanel.Parent = ScreenGui

local PanelCorner = Instance.new("UICorner")
PanelCorner.CornerRadius = UDim.new(0.05, 0)
PanelCorner.Parent = SettingsPanel

local SettingsTitle = Instance.new("TextLabel")
SettingsTitle.Name = "SettingsTitle"
SettingsTitle.Size = UDim2.new(1, 0, 0, 40)
SettingsTitle.BackgroundTransparency = 1
SettingsTitle.Text = "Settings"
SettingsTitle.Font = Enum.Font.GothamBold
SettingsTitle.TextSize = 24
SettingsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsTitle.Parent = SettingsPanel

local SettingsContainer = Instance.new("ScrollingFrame")
SettingsContainer.Name = "SettingsContainer"
SettingsContainer.Size = UDim2.new(1, -20, 1, -50)
SettingsContainer.Position = UDim2.new(0, 10, 0, 45)
SettingsContainer.BackgroundTransparency = 1
SettingsContainer.BorderSizePixel = 0
SettingsContainer.ScrollBarThickness = 4
SettingsContainer.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
SettingsContainer.CanvasSize = UDim2.new(0, 0, 0, 500)
SettingsContainer.Parent = SettingsPanel

local function createSlider(title, min, max, default, position)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = title .. "Frame"
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.Position = position
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = SettingsContainer
    
    local sliderTitle = Instance.new("TextLabel")
    sliderTitle.Name = "Title"
    sliderTitle.Size = UDim2.new(1, 0, 0, 20)
    sliderTitle.BackgroundTransparency = 1
    sliderTitle.Text = title
    sliderTitle.Font = Enum.Font.GothamSemibold
    sliderTitle.TextSize = 16
    sliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderTitle.TextXAlignment = Enum.TextXAlignment.Left
    sliderTitle.Parent = sliderFrame
    
    local sliderBackground = Instance.new("Frame")
    sliderBackground.Name = "Background"
    sliderBackground.Size = UDim2.new(1, 0, 0, 6)
    sliderBackground.Position = UDim2.new(0, 0, 0, 30)
    sliderBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderBackground.BorderSizePixel = 0
    sliderBackground.Parent = sliderFrame
    
    local backgroundCorner = Instance.new("UICorner")
    backgroundCorner.CornerRadius = UDim.new(1, 0)
    backgroundCorner.Parent = sliderBackground
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "Fill"
    sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBackground
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = sliderFill
    
    local sliderButton = Instance.new("TextButton")
    sliderButton.Name = "Button"
    sliderButton.Size = UDim2.new(0, 16, 0, 16)
    sliderButton.Position = UDim2.new((default - min) / (max - min), 0, 0, 30 - 5)
    sliderButton.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.Text = ""
    sliderButton.Parent = sliderFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(1, 0)
    buttonCorner.Parent = sliderButton
    
    local valueLabel = Instance.new("TextLabel")
    valueLabel.Name = "Value"
    valueLabel.Size = UDim2.new(0, 40, 0, 20)
    valueLabel.Position = UDim2.new(1, -40, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Text = tostring(default)
    valueLabel.Font = Enum.Font.GothamSemibold
    valueLabel.TextSize = 14
    valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueLabel.Parent = sliderFrame
    
    local isDragging = false
    local currentValue = default
    
    local function updateSlider(value)
        value = math.clamp(value, min, max)
        local percent = (value - min) / (max - min)
        createTween(sliderFill, {Size = UDim2.new(percent, 0, 1, 0)}, 0.1, Enum.EasingStyle.Quad):Play()
        createTween(sliderButton, {Position = UDim2.new(percent, 0, 0, 30 - 5)}, 0.1, Enum.EasingStyle.Quad):Play()
        valueLabel.Text = tostring(math.floor(value))
        currentValue = value
    end
    
    sliderButton.MouseButton1Down:Connect(function()
        isDragging = true
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            isDragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and isDragging then
            local mousePos = UserInputService:GetMouseLocation()
            local framePos = sliderBackground.AbsolutePosition
            local frameSize = sliderBackground.AbsoluteSize
            
            local relX = math.clamp((mousePos.X - framePos.X) / frameSize.X, 0, 1)
            local newValue = min + (max - min) * relX
            
            updateSlider(newValue)
        end
    end)
    
    return function() return currentValue end, function(value) updateSlider(value) end
end

local function createDropdown(title, options, defaultOption, position)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Name = title .. "Frame"
    dropdownFrame.Size = UDim2.new(1, 0, 0, 60)
    dropdownFrame.Position = position
    dropdownFrame.BackgroundTransparency = 1
    dropdownFrame.Parent = SettingsContainer
    
    local dropdownTitle = Instance.new("TextLabel")
    dropdownTitle.Name = "Title"
    dropdownTitle.Size = UDim2.new(1, 0, 0, 20)
    dropdownTitle.BackgroundTransparency = 1
    dropdownTitle.Text = title
    dropdownTitle.Font = Enum.Font.GothamSemibold
    dropdownTitle.TextSize = 16
    dropdownTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownTitle.TextXAlignment = Enum.TextXAlignment.Left
    dropdownTitle.Parent = dropdownFrame
    
    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Name = "Button"
    dropdownButton.Size = UDim2.new(1, 0, 0, 30)
    dropdownButton.Position = UDim2.new(0, 0, 0, 25)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dropdownButton.Text = defaultOption or "Select Option"
    dropdownButton.Font = Enum.Font.GothamSemibold
    dropdownButton.TextSize = 14
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.Parent = dropdownFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0.2, 0)
    buttonCorner.Parent = dropdownButton
    
    local dropdownIcon = Instance.new("ImageLabel")
    dropdownIcon.Name = "Icon"
    dropdownIcon.Size = UDim2.new(0, 20, 0, 20)
    dropdownIcon.Position = UDim2.new(1, -25, 0.5, 0)
    dropdownIcon.AnchorPoint = Vector2.new(0, 0.5)
    dropdownIcon.BackgroundTransparency = 1
    dropdownIcon.Image = "rbxassetid://6031094670"
    dropdownIcon.Parent = dropdownButton
    
    local optionsFrame = Instance.new("Frame")
    optionsFrame.Name = "Options"
    optionsFrame.Size = UDim2.new(1, 0, 0, #options * 30)
    optionsFrame.Position = UDim2.new(0, 0, 1, 5)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Visible = false
    optionsFrame.ZIndex = 10
    optionsFrame.Parent = dropdownButton
    
    local optionsCorner = Instance.new("UICorner")
    optionsCorner.CornerRadius = UDim.new(0.1, 0)
    optionsCorner.Parent = optionsFrame
    
    local currentOption = defaultOption or options[1]
    
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Name = option
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.Position = UDim2.new(0, 0, 0, (i-1) * 30)
        optionButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        optionButton.BackgroundTransparency = 0
        optionButton.Text = option
        optionButton.Font = Enum.Font.GothamSemibold
        optionButton.TextSize = 14
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.ZIndex = 11
        optionButton.Parent = optionsFrame
        
        if option == currentOption then
            optionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 100)
        end
        
        optionButton.MouseEnter:Connect(function()
            createTween(optionButton, {BackgroundColor3 = Color3.fromRGB(60, 60, 100)}, 0.2):Play()
        end)
        
        optionButton.MouseLeave:Connect(function()
            if option ~= currentOption then
                createTween(optionButton, {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}, 0.2):Play()
            end
        end)
        
        optionButton.MouseButton1Click:Connect(function()
            currentOption = option
            dropdownButton.Text = option
            optionsFrame.Visible = false
            
            for _, button in pairs(optionsFrame:GetChildren()) do
                if button:IsA("TextButton") then
                    if button.Name == option then
                        button.BackgroundColor3 = Color3.fromRGB(60, 60, 100)
                    else
                        button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    end
                end
            end
        end)
    end
    
    dropdownButton.MouseButton1Click:Connect(function()
        optionsFrame.Visible = not optionsFrame.Visible
        
        if optionsFrame.Visible then
            createTween(dropdownIcon, {Rotation = 180}, 0.3, Enum.EasingStyle.Quad):Play()
        else
            createTween(dropdownIcon, {Rotation = 0}, 0.3, Enum.EasingStyle.Quad):Play()
        end
    end)
    
    UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local mousePos = UserInputService:GetMouseLocation()
            local framePos = optionsFrame.AbsolutePosition
            local frameSize = optionsFrame.AbsoluteSize
            
            if optionsFrame.Visible and 
               (mousePos.X < framePos.X or mousePos.X > framePos.X + frameSize.X or
                mousePos.Y < framePos.Y or mousePos.Y > framePos.Y + frameSize.Y) and
               not (mousePos.X >= dropdownButton.AbsolutePosition.X and 
                    mousePos.X <= dropdownButton.AbsolutePosition.X + dropdownButton.AbsoluteSize.X and
                    mousePos.Y >= dropdownButton.AbsolutePosition.Y and 
                    mousePos.Y <= dropdownButton.AbsolutePosition.Y + dropdownButton.AbsoluteSize.Y) then
                
                optionsFrame.Visible = false
                createTween(dropdownIcon, {Rotation = 0}, 0.3, Enum.EasingStyle.Quad):Play()
            end
        end
    end)
    
    return function() return currentOption end, function(option)
        if table.find(options, option) then
            currentOption = option
            dropdownButton.Text = option
            
            for _, button in pairs(optionsFrame:GetChildren()) do
                if button:IsA("TextButton") then
                    if button.Name == option then
                        button.BackgroundColor3 = Color3.fromRGB(60, 60, 100)
                    else
                        button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    end
                end
            end
        end
    end
end

local SettingsShadow = Instance.new("Frame")
SettingsShadow.Name = "Shadow"
SettingsShadow.Size = UDim2.new(1, 20, 1, 20)
SettingsShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
SettingsShadow.AnchorPoint = Vector2.new(0.5, 0.5)
SettingsShadow.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
SettingsShadow.BackgroundTransparency = 0.7
SettingsShadow.ZIndex = SettingsPanel.ZIndex - 1
SettingsShadow.Visible = false
SettingsShadow.Parent = SettingsPanel

local ShadowCorner = Instance.new("UICorner")
ShadowCorner.CornerRadius = UDim.new(0.05, 0)
ShadowCorner.Parent = SettingsShadow

local function showSettingsPanel()
    SettingsPanel.Visible = true
    SettingsShadow.Visible = true
    
    SettingsPanel.Size = UDim2.new(0, 30, 0, 30)
    SettingsPanel.Position = UDim2.new(0.5, 0, 0.5, 0)
    SettingsPanel.BackgroundTransparency = 0
    
    local bigSize = UDim2.new(0, 350, 0, 450)
    local bigPosition = UDim2.new(0.5, -175, 0.5, -225)
    
    local growTween = createTween(
        SettingsPanel,
        {
            Size = bigSize,
            Position = bigPosition
        },
        0.3,
        Enum.EasingStyle.Back,
        Enum.EasingDirection.Out
    )
    
    SettingsShadow.Size = UDim2.new(1, 20, 1, 20)
    SettingsShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    growTween:Play()
    
    growTween.Completed:Connect(function()
        local finalSize = UDim2.new(0, 300, 0, 400)
        local finalPosition = UDim2.new(0.5, -150, 0.5, -200)
        
        local settleTween = createTween(
            SettingsPanel,
            {
                Size = finalSize,
                Position = finalPosition
            },
            0.2,
            Enum.EasingStyle.Quad,
            Enum.EasingDirection.InOut
        )
        
        settleTween:Play()
    end)
end

local function hideSettingsPanel()
    local biggerSize = UDim2.new(0, 350, 0, 450)
    local biggerPosition = UDim2.new(0.5, -175, 0.5, -225)
    
    local growTween = createTween(
        SettingsPanel,
        {
            Size = biggerSize,
            Position = biggerPosition
        },
        0.2,
        Enum.EasingStyle.Quad,
        Enum.EasingDirection.Out
    )
    
    growTween:Play()
    
    growTween.Completed:Connect(function()
        local shrinkTween = createTween(
            SettingsPanel,
            {
                Size = UDim2.new(0, 10, 0, 10),
                Position = UDim2.new(0.5, 0, 0.5, 0),
                BackgroundTransparency = 1
            },
            0.3,
            Enum.EasingStyle.Back,
            Enum.EasingDirection.In
        )
        
        local shadowTween = createTween(
            SettingsShadow,
            {
                BackgroundTransparency = 1
            },
            0.3
        )
        
        shrinkTween:Play()
        shadowTween:Play()
        
        shrinkTween.Completed:Connect(function()
            SettingsPanel.Visible = false
            SettingsShadow.Visible = false
        end)
    end)
end

local getOrbitSpeed, setOrbitSpeed = createSlider("Orbit Speed", 1, 100, 10, UDim2.new(0, 0, 0, 0))
local getOrbitRadius, setOrbitRadius = createSlider("Orbit Radius", 1, 10, 5, UDim2.new(0, 0, 0, 70))
local getGroundRadius, setGroundRadius = createSlider("Ground Radius", 1, 20, 3, UDim2.new(0, 0, 0, 140))

local getTheme, setTheme = createDropdown("Themes", {
    "White", "Black", "Green", "Violet", "Purple", "Blue", "Cyan", 
    "Red", "Orange", "Pink", "Brown", "Dark Green", "Light Pink", "Dark Red", "Maroon"
}, "Purple", UDim2.new(0, 0, 0, 210))

local getSpecialTheme, setSpecialTheme = createDropdown("Special Themes", {
    "None", "Magma", "Water", "Fire", "Space"
}, "None", UDim2.new(0, 0, 0, 290))

local function clearSpecialEffects()
    local existingEffects = MainFrame:FindFirstChild("SpecialEffects")
    if existingEffects then
        existingEffects:Destroy()
    end
end

local function applyTheme(theme)
    local themeColors = {
        White = {
            main = Color3.fromRGB(240, 240, 240),
            light = Color3.fromRGB(255, 255, 255),
            dark = Color3.fromRGB(220, 220, 220),
            text = Color3.fromRGB(30, 30, 30),
            accent = Color3.fromRGB(200, 200, 200)
        },
        Black = {
            main = Color3.fromRGB(30, 30, 30),
            light = Color3.fromRGB(50, 50, 50),
            dark = Color3.fromRGB(20, 20, 20),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(70, 70, 70)
        },
        Green = {
            main = Color3.fromRGB(40, 160, 90),
            light = Color3.fromRGB(60, 180, 110),
            dark = Color3.fromRGB(30, 140, 80),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(80, 200, 130)
        },
        Violet = {
            main = Color3.fromRGB(130, 60, 200),
            light = Color3.fromRGB(150, 80, 220),
            dark = Color3.fromRGB(110, 50, 180),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(170, 100, 240)
        },
        Purple = {
            main = Color3.fromRGB(100, 40, 180),
            light = Color3.fromRGB(120, 60, 200),
            dark = Color3.fromRGB(80, 30, 160),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(140, 80, 220)
        },
        Blue = {
            main = Color3.fromRGB(40, 80, 180),
            light = Color3.fromRGB(60, 100, 200),
            dark = Color3.fromRGB(30, 70, 160),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(80, 120, 220)
        },
        Cyan = {
            main = Color3.fromRGB(40, 180, 200),
            light = Color3.fromRGB(60, 200, 220),
            dark = Color3.fromRGB(30, 160, 180),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(80, 220, 240)
        },
        Red = {
            main = Color3.fromRGB(200, 50, 50),
            light = Color3.fromRGB(220, 70, 70),
            dark = Color3.fromRGB(180, 40, 40),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(240, 90, 90)
        },
        Orange = {
            main = Color3.fromRGB(200, 120, 40),
            light = Color3.fromRGB(220, 140, 60),
            dark = Color3.fromRGB(180, 100, 30),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(240, 160, 80)
        },
        Pink = {
            main = Color3.fromRGB(200, 80, 160),
            light = Color3.fromRGB(220, 100, 180),
            dark = Color3.fromRGB(180, 60, 140),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(240, 120, 200)
        },
        Brown = {
            main = Color3.fromRGB(140, 100, 70),
            light = Color3.fromRGB(160, 120, 90),
            dark = Color3.fromRGB(120, 80, 50),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(180, 140, 110)
        },
        ["Dark Green"] = {
            main = Color3.fromRGB(40, 100, 60),
            light = Color3.fromRGB(60, 120, 80),
            dark = Color3.fromRGB(30, 80, 50),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(80, 140, 100)
        },
        ["Light Pink"] = {
            main = Color3.fromRGB(240, 180, 200),
            light = Color3.fromRGB(255, 200, 220),
            dark = Color3.fromRGB(220, 160, 180),
            text = Color3.fromRGB(80, 60, 80),
            accent = Color3.fromRGB(255, 220, 240)
        },
        ["Dark Red"] = {
            main = Color3.fromRGB(140, 30, 30),
            light = Color3.fromRGB(160, 50, 50),
            dark = Color3.fromRGB(120, 20, 20),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(180, 70, 70)
        },
        Maroon = {
            main = Color3.fromRGB(120, 30, 60),
            light = Color3.fromRGB(140, 50, 80),
            dark = Color3.fromRGB(100, 20, 50),
            text = Color3.fromRGB(255, 255, 255),
            accent = Color3.fromRGB(160, 70, 100)
        }
    }
    
    local colors = themeColors[theme]
    if not colors then return end
    
    createTween(MainFrame, {BackgroundColor3 = colors.main}, 0.5):Play()
    createTween(TopBar, {BackgroundColor3 = colors.dark}, 0.5):Play()
    
    MainGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, colors.light),
        ColorSequenceKeypoint.new(1, colors.dark)
    })
    
    createTween(MainStroke, {Color = colors.accent}, 0.5):Play()
    createTween(Shadow, {BackgroundColor3 = colors.dark}, 0.5):Play()
    
    for _, child in pairs(ContentContainer:GetChildren()) do
        if child:IsA("Frame") and child.Name:match("Frame$") and not child.Name:match("ListFrame") then
            createTween(child, {BackgroundColor3 = colors.main}, 0.5):Play()
            
            local gradient = child:FindFirstChildOfClass("UIGradient")
            if gradient then
                gradient.Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, colors.light),
                    ColorSequenceKeypoint.new(1, colors.dark)
                })
            end
            
            local stroke = child:FindFirstChildOfClass("UIStroke")
            if stroke then
                createTween(stroke, {Color = colors.accent}, 0.5):Play()
            end
        end
    end
    
    for _, child in pairs(PlayerListFrame:GetChildren()) do
        if child:IsA("TextButton") then
            createTween(child, {BackgroundColor3 = colors.dark}, 0.5):Play()
        end
    end
end

local function applySpecialTheme(theme)
    clearSpecialEffects()
    
    if theme == "None" then return end
    
    local effectsContainer = Instance.new("Frame")
    effectsContainer.Name = "SpecialEffects"
    effectsContainer.Size = UDim2.new(1, 0, 1, 0)
    effectsContainer.BackgroundTransparency = 1
    effectsContainer.ClipsDescendants = true
    effectsContainer.ZIndex = MainFrame.ZIndex + 1
    effectsContainer.Parent = MainFrame
    
    if theme == "Magma" then
        createTween(MainFrame, {BackgroundColor3 = Color3.fromRGB(50, 10, 10)}, 0.5):Play()
        MainGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 20, 20)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 40, 10)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 10, 10))
        })
        
        for i = 1, 20 do
            local particle = Instance.new("Frame")
            particle.Name = "MagmaParticle" .. i
            particle.Size = UDim2.new(0, math.random(5, 15), 0, math.random(20, 60))
            particle.Position = UDim2.new(math.random(0, 100)/100, 0, 1.2, 0)
            particle.BackgroundColor3 = Color3.fromRGB(200 + math.random(-40, 40), 100 + math.random(-50, 50), 0)
            particle.BackgroundTransparency = 0.2
            particle.BorderSizePixel = 0
            particle.ZIndex = effectsContainer.ZIndex
            particle.Parent = effectsContainer
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(1, 0)
            corner.Parent = particle
            
            spawn(function()
                while effectsContainer.Parent do
                    local startPos = UDim2.new(math.random(0, 100)/100, 0, 1.2, 0)
                    local endPos = UDim2.new(startPos.X.Scale + math.random(-20, 20)/100, 0, -0.2, 0)
                    
                    particle.Position = startPos
                    
                    local transparency = math.random(2, 5) / 10
                    particle.BackgroundTransparency = transparency
                    
                    local duration = math.random(3, 6)
                    createTween(
                        particle, 
                        {Position = endPos}, 
                        duration,
                        Enum.EasingStyle.Sine, 
                        Enum.EasingDirection.In
                    ):Play()
                    
                    wait(duration - 0.1)
                end
            end)
        end
        
    elseif theme == "Water" then
        createTween(MainFrame, {BackgroundColor3 = Color3.fromRGB(10, 30, 70)}, 0.5):Play()
        MainGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 60, 120)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(10, 40, 90)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(5, 20, 60))
        })
        
        for i = 1, 15 do
            local wave = Instance.new("Frame")
            wave.Name = "WaterWave" .. i
            wave.Size = UDim2.new(2, 0, 0, math.random(2, 5))
            wave.Position = UDim2.new(-0.5, 0, math.random(0, 120)/100, 0)
            wave.BackgroundColor3 = Color3.fromRGB(120 + math.random(-40, 40), 200 + math.random(-40, 40), 255)
            wave.BackgroundTransparency = 0.7
            wave.BorderSizePixel = 0
            wave.ZIndex = effectsContainer.ZIndex
            wave.Parent = effectsContainer
            
            spawn(function()
                while effectsContainer.Parent do
                    local duration = math.random(4, 8)
                    local startPos = UDim2.new(-0.5, 0, math.random(0, 120)/100, 0)
                    local endPos = UDim2.new(1.5, 0, startPos.Y.Scale + math.random(-10, 10)/100, 0)
                    
                    wave.Position = startPos
                    wave.BackgroundTransparency = math.random(6, 8) / 10
                    
                    createTween(
                        wave, 
                        {Position = endPos}, 
                        duration,
                        Enum.EasingStyle.Sine, 
                        Enum.EasingDirection.InOut
                    ):Play()
                    
                    wait(duration - 0.1)
                end
            end)
        end
        
    elseif theme == "Fire" then
        createTween(MainFrame, {BackgroundColor3 = Color3.fromRGB(50, 20, 0)}, 0.5):Play()
        MainGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 40, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(160, 60, 10)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 30, 0))
        })
        
        for i = 1, 30 do
            local flame = Instance.new("Frame")
            flame.Name = "Flame" .. i
            flame.Size = UDim2.new(0, math.random(5, 15), 0, math.random(20, 60))
            flame.Position = UDim2.new(math.random(0, 100)/100, 0, 1.2, 0)
            
            local r = 200 + math.random(-30, 55)
            local g = 100 + math.random(-50, 50)
            local b = math.random(0, 30)
            flame.BackgroundColor3 = Color3.fromRGB(r, g, b)
            
            flame.BackgroundTransparency = 0.2
            flame.BorderSizePixel = 0
            flame.ZIndex = effectsContainer.ZIndex
            flame.Parent = effectsContainer
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(1, 0)
            corner.Parent = flame
            
            spawn(function()
                while effectsContainer.Parent do
                    local startPos = UDim2.new(math.random(0, 100)/100, 0, 1, 0)
                    local midPos = UDim2.new(startPos.X.Scale + math.random(-20, 20)/100, 0, 0.5, 0)
                    local endPos = UDim2.new(midPos.X.Scale + math.random(-20, 20)/100, 0, -0.2, 0)
                    
                    flame.Position = startPos
                    flame.Size = UDim2.new(0, math.random(5, 15), 0, math.random(20, 60))
                    flame.BackgroundTransparency = 0.2
                    
                    local firstTween = createTween(
                        flame, 
                        {
                            Position = midPos,
                            Size = UDim2.new(0, flame.Size.X.Offset * 0.8, 0, flame.Size.Y.Offset * 1.2),
                            BackgroundTransparency = 0.4
                        }, 
                        math.random(10, 20) / 10,
                        Enum.EasingStyle.Sine, 
                        Enum.EasingDirection.Out
                    )
                    
                    firstTween:Play()
                    firstTween.Completed:Wait()
                    
                    local secondTween = createTween(
                        flame, 
                        {
                            Position = endPos,
                            Size = UDim2.new(0, flame.Size.X.Offset * 0.5, 0, flame.Size.Y.Offset * 0.5),
                            BackgroundTransparency = 0.9
                        }, 
                        math.random(10, 20) / 10,
                        Enum.EasingStyle.Sine, 
                        Enum.EasingDirection.Out
                    )
                    
                    secondTween:Play()
                    secondTween.Completed:Wait()
                end
            end)
        end
        
    elseif theme == "Space" then
        createTween(MainFrame, {BackgroundColor3 = Color3.fromRGB(5, 5, 15)}, 0.5):Play()
        MainGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(10, 10, 30)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(5, 5, 20)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(2, 2, 10))
        })
        
        for i = 1, 100 do
            local star = Instance.new("Frame")
            star.Name = "Star" .. i
            
            local size = math.random(1, 10) <= 8 and math.random(1, 2) or math.random(2, 4)
            star.Size = UDim2.new(0, size, 0, size)
            
            star.Position = UDim2.new(math.random(0, 100)/100, 0, math.random(0, 100)/100, 0)
            
            local colorType = math.random(1, 10)
            if colorType <= 7 then
                star.BackgroundColor3 = Color3.fromRGB(230 + math.random(-30, 25), 230 + math.random(-30, 25), 255)
            elseif colorType <= 9 then
                star.BackgroundColor3 = Color3.fromRGB(255, 255, 220 + math.random(-20, 35))
            else
                star.BackgroundColor3 = Color3.fromRGB(255, 200 + math.random(-40, 40), 200 + math.random(-40, 40))
            end
            
            star.BackgroundTransparency = math.random(0, 3) / 10
            star.BorderSizePixel = 0
            star.ZIndex = effectsContainer.ZIndex
            star.Parent = effectsContainer
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(1, 0)
            corner.Parent = star
            
            spawn(function()
                while effectsContainer.Parent do
                    local twinkleDuration = math.random(10, 30) / 10
                    
                    local startPos = star.Position
                    local endPos = UDim2.new(
                        math.clamp(startPos.X.Scale + math.random(-5, 5)/1000, 0, 1),
                        0,
                        math.clamp(startPos.Y.Scale + math.random(-5, 5)/1000, 0, 1),
                        0
                    )
                    
                    local targetTransparency = math.random(0, 6) / 10
                    
                    local startSize = star.Size
                    local endSize = UDim2.new(
                        0, 
                        math.max(1, startSize.X.Offset + math.random(-1, 1)),
                        0,
                        math.max(1, startSize.Y.Offset + math.random(-1, 1))
                    )
                    
                    createTween(
                        star, 
                        {
                            BackgroundTransparency = targetTransparency,
                            Position = endPos,
                            Size = endSize
                        }, 
                        twinkleDuration,
                        Enum.EasingStyle.Sine, 
                        Enum.EasingDirection.InOut
                    ):Play()
                    
                    wait(twinkleDuration)
                end
            end)
        end
    end
end

local settingsVisible = false
SettingsIcon.MouseButton1Click:Connect(function()
    settingsVisible = not settingsVisible
    
    if settingsVisible then
        showSettingsPanel()
    else
        hideSettingsPanel()
    end
end)

RunService.Heartbeat:Connect(function()
    spinSpeed = getOrbitSpeed()
    
    if getAutoKillToggle or getAutoKillGroundToggle then
        local currentTheme = getTheme()
        local currentSpecialTheme = getSpecialTheme()
        
        if currentTheme and currentTheme ~= "None" then
            applyTheme(currentTheme)
        end
        
        if currentSpecialTheme and currentSpecialTheme ~= "None" then
            applySpecialTheme(currentSpecialTheme)
        end
    end
end)

--// GUI AUTO FARM \\--

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = workspace.CurrentCamera

-- Constants
local PURPLE_MAIN = Color3.fromRGB(130, 40, 255) -- Main purple color
local PURPLE_LIGHT = Color3.fromRGB(150, 60, 255) -- Lighter purple for hover
local PURPLE_DARK = Color3.fromRGB(100, 30, 200) -- Darker purple for gradient
local GREEN_VALID = Color3.fromRGB(40, 180, 120) -- Green for valid/ON states
local RED_INVALID = Color3.fromRGB(220, 60, 60) -- Red for invalid/error states
local YELLOW_WARNING = Color3.fromRGB(240, 200, 40) -- Yellow for warning states
local CORNER_RADIUS = UDim.new(0.3, 0) -- Super round corners
local STROKE_THICKNESS = 2 -- UI Stroke thickness
local TWEEN_TIME_FAST = 0.2 -- Fast animation time
local TWEEN_TIME_MED = 0.3 -- Medium animation time
local TWEEN_TIME_SLOW = 0.5 -- Slow animation time

-- Variables
local targetPlayer = nil
local autoKillEnabled = false
local autoKillGroundEnabled = false
local autoFarmEnabled = false
local autoFarmGroundEnabled = false
local isDragging = false
local dragStartPos = nil
local startPos = nil
local lastAttackTime = 0
local attackCooldown = 2 -- seconds
local spinSpeed = 10 -- how fast to spin around target
local availablePlayers = {} -- Keep track of all valid targets

-- Create Main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoFarmGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = PlayerGui

-- Create Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 400) -- Made taller for player list
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = PURPLE_MAIN
MainFrame.BorderSizePixel = 0
MainFrame.Active = true -- For dragging
MainFrame.Parent = ScreenGui

-- Add top bar for dragging
local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Size = UDim2.new(1, 0, 0, 40)
TopBar.BackgroundColor3 = PURPLE_DARK
TopBar.BorderSizePixel = 0
TopBar.Parent = MainFrame

-- Add rounded corners to everything
local function applyCorners(instance)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = CORNER_RADIUS
    corner.Parent = instance
    return corner
end

-- Apply special corner radius to top bar
local TopBarCorner = applyCorners(TopBar)
TopBarCorner.CornerRadius = UDim.new(0.3, 0)

-- Apply corners to main frame
applyCorners(MainFrame)

-- Add title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 1, 0)
Title.BackgroundTransparency = 1
Title.Text = "Auto Farm"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = TopBar

-- Add gradient to main frame
local MainGradient = Instance.new("UIGradient")
MainGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, PURPLE_LIGHT),
    ColorSequenceKeypoint.new(1, PURPLE_DARK)
})
MainGradient.Rotation = 45
MainGradient.Parent = MainFrame

-- Add stroke to main frame
local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Color3.fromRGB(180, 120, 255)
MainStroke.Thickness = STROKE_THICKNESS
MainStroke.Parent = MainFrame

-- Create a shadow effect
local Shadow = Instance.new("Frame")
Shadow.Name = "Shadow"
Shadow.Size = UDim2.new(1, 20, 1, 20)
Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
Shadow.BackgroundColor3 = Color3.fromRGB(80, 20, 120)
Shadow.BackgroundTransparency = 0.7
Shadow.ZIndex = MainFrame.ZIndex - 1
Shadow.Parent = MainFrame

-- Apply corners to shadow
local ShadowCorner = applyCorners(Shadow)

-- Animation functions
local function createTween(instance, properties, duration, easingStyle, easingDirection)
    local tween = TweenService:Create(
        instance,
        TweenInfo.new(duration, easingStyle or Enum.EasingStyle.Quint, easingDirection or Enum.EasingDirection.Out),
        properties
    )
    return tween
end

-- Create content container
local ContentContainer = Instance.new("Frame")
ContentContainer.Name = "ContentContainer"
ContentContainer.Size = UDim2.new(1, -20, 1, -50)
ContentContainer.Position = UDim2.new(0, 10, 0, 45)
ContentContainer.BackgroundTransparency = 1
ContentContainer.Parent = MainFrame

-- Function to create textbox component
local function createTextBox(placeholder, position)
    local textBoxFrame = Instance.new("Frame")
    textBoxFrame.Name = placeholder .. "Frame"
    textBoxFrame.Size = UDim2.new(1, 0, 0, 40)
    textBoxFrame.Position = position
    textBoxFrame.BackgroundColor3 = PURPLE_MAIN
    textBoxFrame.Parent = ContentContainer
    
    -- Apply corners
    applyCorners(textBoxFrame)
    
    -- Add gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, PURPLE_LIGHT),
        ColorSequenceKeypoint.new(1, PURPLE_DARK)
    })
    gradient.Rotation = 45
    gradient.Parent = textBoxFrame
    
    -- Add stroke
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(180, 120, 255)
    stroke.Thickness = STROKE_THICKNESS
    stroke.Parent = textBoxFrame
    
    -- Create the actual textbox
    local textBox = Instance.new("TextBox")
    textBox.Name = "TextBox"
    textBox.Size = UDim2.new(1, -20, 1, -10)
    textBox.Position = UDim2.new(0, 10, 0, 5)
    textBox.BackgroundTransparency = 1
    textBox.Text = ""
    textBox.PlaceholderText = placeholder
    textBox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.Font = Enum.Font.GothamSemibold
    textBox.TextSize = 16
    textBox.ClearTextOnFocus = false
    textBox.Parent = textBoxFrame
    
    -- Add hover/focus effects
    textBox.Focused:Connect(function()
        createTween(stroke, {Color = Color3.fromRGB(220, 180, 255)}, TWEEN_TIME_FAST):Play()
    end)
    
    textBox.FocusLost:Connect(function()
        createTween(stroke, {Color = Color3.fromRGB(180, 120, 255)}, TWEEN_TIME_FAST):Play()
    end)
    
    return textBox, textBoxFrame
end

-- Function to create button component
local function createButton(text, position, isToggleable)
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Name = text .. "Frame"
    buttonFrame.Size = UDim2.new(1, 0, 0, 40)
    buttonFrame.Position = position
    buttonFrame.BackgroundColor3 = PURPLE_MAIN
    buttonFrame.Parent = ContentContainer
    
    -- Apply corners
    applyCorners(buttonFrame)
    
    -- Add gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, PURPLE_LIGHT),
        ColorSequenceKeypoint.new(1, PURPLE_DARK)
    })
    gradient.Rotation = 45
    gradient.Parent = buttonFrame
    
    -- Add stroke
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(180, 120, 255)
    stroke.Thickness = STROKE_THICKNESS
    stroke.Parent = buttonFrame
    
    -- Create the button
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamSemibold
    button.TextSize = 16
    button.Parent = buttonFrame
    
    -- Add click animation
    local isToggled = false
    
    button.MouseButton1Click:Connect(function()
        -- Click animation
        createTween(buttonFrame, {Size = UDim2.new(1, 0, 0, 36)}, 0.1, Enum.EasingStyle.Quad):Play()
        wait(0.05)
        createTween(buttonFrame, {Size = UDim2.new(1, 0, 0, 40)}, 0.1, Enum.EasingStyle.Quad):Play()
        
        -- Toggle state if toggleable
        if isToggleable then
            isToggled = not isToggled
            
            if isToggled then
                -- Change to ON state
                button.Text = text .. ": ON"
                createTween(buttonFrame, {BackgroundColor3 = GREEN_VALID}, TWEEN_TIME_FAST):Play()
                gradient.Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 210, 140)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 160, 100))
                })
                createTween(stroke, {Color = Color3.fromRGB(100, 230, 160)}, TWEEN_TIME_FAST):Play()
            else
                -- Change back to OFF state
                button.Text = text
                createTween(buttonFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
                gradient.Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, PURPLE_LIGHT),
                    ColorSequenceKeypoint.new(1, PURPLE_DARK)
                })
                createTween(stroke, {Color = Color3.fromRGB(180, 120, 255)}, TWEEN_TIME_FAST):Play()
            end
        end
    end)
    
    -- Add hover effects
    button.MouseEnter:Connect(function()
        if not isToggled then
            createTween(buttonFrame, {BackgroundColor3 = PURPLE_LIGHT}, TWEEN_TIME_FAST):Play()
        else
            createTween(buttonFrame, {BackgroundColor3 = Color3.fromRGB(60, 200, 140)}, TWEEN_TIME_FAST):Play()
        end
        createTween(stroke, {Thickness = STROKE_THICKNESS + 1}, TWEEN_TIME_FAST):Play()
    end)
    
    button.MouseLeave:Connect(function()
        if not isToggled then
            createTween(buttonFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
        else
            createTween(buttonFrame, {BackgroundColor3 = GREEN_VALID}, TWEEN_TIME_FAST):Play()
        end
        createTween(stroke, {Thickness = STROKE_THICKNESS}, TWEEN_TIME_FAST):Play()
    end)
    
    return button, buttonFrame, function() return isToggled end, function(state) 
        isToggled = state
        
        if isToggled then
            button.Text = text .. ": ON"
            buttonFrame.BackgroundColor3 = GREEN_VALID
            gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 210, 140)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 160, 100))
            })
            stroke.Color = Color3.fromRGB(100, 230, 160)
        else
            button.Text = text
            buttonFrame.BackgroundColor3 = PURPLE_MAIN
            gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, PURPLE_LIGHT),
                ColorSequenceKeypoint.new(1, PURPLE_DARK)
            })
            stroke.Color = Color3.fromRGB(180, 120, 255)
        end
    end
end

-- Create player list frame
local PlayerListFrame = Instance.new("ScrollingFrame")
PlayerListFrame.Name = "PlayerListFrame"
PlayerListFrame.Size = UDim2.new(1, 0, 0, 80)
PlayerListFrame.Position = UDim2.new(0, 0, 0, 250)
PlayerListFrame.BackgroundTransparency = 0.9
PlayerListFrame.BackgroundColor3 = Color3.fromRGB(40, 20, 60)
PlayerListFrame.BorderSizePixel = 0
PlayerListFrame.ScrollBarThickness = 4
PlayerListFrame.ScrollBarImageColor3 = Color3.fromRGB(180, 120, 255)
PlayerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will be updated dynamically
PlayerListFrame.Visible = false -- Hidden by default
PlayerListFrame.Parent = ContentContainer
applyCorners(PlayerListFrame)

-- Create components
local usernameTextBox, usernameFrame = createTextBox("Input Username or Click â†’", UDim2.new(0, 0, 0, 0))
local showPlayersButton, showPlayersFrame = createButton("Show Players", UDim2.new(0, 0, 0, 50), false)
local autoKillButton, autoKillFrame, getAutoKillToggle, setAutoKillToggle = createButton("Auto Kill", UDim2.new(0, 0, 0, 100), true)
local autoKillGroundButton, autoKillGroundFrame, getAutoKillGroundToggle, setAutoKillGroundToggle = createButton("Auto Kill (Ground)", UDim2.new(0, 0, 0, 150), true)
local targetRandomButton, targetRandomFrame = createButton("Target Random", UDim2.new(0, 0, 0, 200), false)

-- Create a status label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Size = UDim2.new(1, 0, 0, 40)
StatusLabel.Position = UDim2.new(0, 0, 0, 340) -- Moved down for player list
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "Status: Idle"
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.Font = Enum.Font.GothamSemibold
StatusLabel.TextSize = 16
StatusLabel.Parent = ContentContainer

-- Make the frame draggable
TopBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStartPos = input.Position
        startPos = MainFrame.Position
        
        -- Input animation
        createTween(TopBar, {BackgroundColor3 = Color3.fromRGB(120, 40, 230)}, TWEEN_TIME_FAST):Play()
    end
end)

TopBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
        
        -- Release animation
        createTween(TopBar, {BackgroundColor3 = PURPLE_DARK}, TWEEN_TIME_FAST):Play()
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and isDragging then
        local delta = input.Position - dragStartPos
        
        -- Smooth tween when dragging
        local newPosition = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
        
        createTween(MainFrame, {Position = newPosition}, 0.05, Enum.EasingStyle.Linear):Play()
    end
end)

-- Helper function to check if player is valid (now supports display names/nicknames)
local function isPlayerValid(input)
    -- If input is already a player object, return it
    if typeof(input) == "Instance" and input:IsA("Player") then
        return input
    end
    
    -- Early return for empty input
    if not input or input == "" then return nil end
    
    -- Get all players in the game
    local allPlayers = Players:GetPlayers()
    
    -- Track best match with score
    local bestMatch = nil
    local bestScore = 0
    
    for _, player in pairs(allPlayers) do
        local score = 0
        
        -- Exact username match (highest priority)
        if player.Name:lower() == input:lower() then
            score = 100
        -- Exact display name match
        elseif player.DisplayName and player.DisplayName:lower() == input:lower() then
            score = 90
        -- Username contains input
        elseif player.Name:lower():find(input:lower(), 1, true) then
            score = 50 + (string.len(input) / string.len(player.Name) * 30)
        -- Display name contains input
        elseif player.DisplayName and player.DisplayName:lower():find(input:lower(), 1, true) then
            score = 40 + (string.len(input) / string.len(player.DisplayName) * 30)
        end
        
        -- Found a better match
        if score > bestScore then
            bestMatch = player
            bestScore = score
        end
    end
    
    -- Must have at least some match to count
    if bestScore > 0 then
        return bestMatch
    end
    
    -- No match found
    return nil
end

-- Update player list with clickable buttons
local function updatePlayerList()
    -- Clear existing player buttons
    for _, child in pairs(PlayerListFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    -- Get all players and sort alphabetically
    local allPlayers = Players:GetPlayers()
    table.sort(allPlayers, function(a, b)
        return a.Name:lower() < b.Name:lower()
    end)
    
    availablePlayers = {}
    local yPos = 0
    
    for _, player in pairs(allPlayers) do
        if player ~= LocalPlayer then
            table.insert(availablePlayers, player)
            
            -- Create player button
            local playerButton = Instance.new("TextButton")
            playerButton.Name = player.Name .. "_Button"
            playerButton.Size = UDim2.new(1, -10, 0, 30)
            playerButton.Position = UDim2.new(0, 5, 0, yPos)
            playerButton.BackgroundColor3 = PURPLE_DARK
            playerButton.BackgroundTransparency = 0.5
            playerButton.BorderSizePixel = 0
            playerButton.Text = player.DisplayName .. " (@" .. player.Name .. ")"
            playerButton.Font = Enum.Font.Gotham
            playerButton.TextSize = 14
            playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            playerButton.Parent = PlayerListFrame
            applyCorners(playerButton)
            
            -- Add hover effect
            playerButton.MouseEnter:Connect(function()
                createTween(playerButton, {BackgroundTransparency = 0.2}, TWEEN_TIME_FAST):Play()
                createTween(playerButton, {BackgroundColor3 = PURPLE_LIGHT}, TWEEN_TIME_FAST):Play()
            end)
            
            playerButton.MouseLeave:Connect(function()
                createTween(playerButton, {BackgroundTransparency = 0.5}, TWEEN_TIME_FAST):Play()
                createTween(playerButton, {BackgroundColor3 = PURPLE_DARK}, TWEEN_TIME_FAST):Play()
            end)
            
            -- Click to select player
            playerButton.MouseButton1Click:Connect(function()
                targetPlayer = player
                usernameTextBox.Text = player.DisplayName .. " (@" .. player.Name .. ")"
                usernameTextBox.TextColor3 = GREEN_VALID
                StatusLabel.Text = "Status: Target set to " .. player.Name
                
                -- Hide player list
                PlayerListFrame.Visible = false
                
                -- Animation feedback
                createTween(playerButton, {BackgroundColor3 = GREEN_VALID}, TWEEN_TIME_FAST):Play()
                wait(0.2)
                createTween(playerButton, {BackgroundColor3 = PURPLE_DARK}, TWEEN_TIME_FAST):Play()
            end)
            
            yPos = yPos + 35
        end
    end
    
    -- Update canvas size
    PlayerListFrame.CanvasSize = UDim2.new(0, 0, 0, yPos)
end

-- Toggle show/hide player list
showPlayersButton.MouseButton1Click:Connect(function()
    if PlayerListFrame.Visible then
        PlayerListFrame.Visible = false
    else
        updatePlayerList()
        PlayerListFrame.Visible = true
    end
end)

-- Username input validation
usernameTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and usernameTextBox.Text ~= "" then
        local inputUsername = usernameTextBox.Text
        
        -- Check if player exists (now with improved validation)
        local player = isPlayerValid(inputUsername)
        
        if player then
            -- Player is valid
            targetPlayer = player
            
            -- Update textbox to show actual username (helps user confirm the right player)
            if player.DisplayName and player.DisplayName:lower() ~= player.Name:lower() then
                usernameTextBox.Text = player.DisplayName .. " (@" .. player.Name .. ")"
            else
                usernameTextBox.Text = player.Name
            end
            
            usernameTextBox.TextColor3 = GREEN_VALID
            StatusLabel.Text = "Status: Target set to " .. player.Name
            
            -- Success animation
            createTween(usernameFrame, {BackgroundColor3 = GREEN_VALID}, TWEEN_TIME_FAST):Play()
            wait(0.2)
            createTween(usernameFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
        else
            -- Player is invalid
            targetPlayer = nil
            
            -- Check if any players are even in the game
            if #Players:GetPlayers() <= 1 then
                usernameTextBox.Text = "No other players in game!"
                usernameTextBox.TextColor3 = YELLOW_WARNING
                StatusLabel.Text = "Status: No valid targets found"
                
                createTween(usernameFrame, {BackgroundColor3 = YELLOW_WARNING}, TWEEN_TIME_FAST):Play()
                wait(0.2)
                createTween(usernameFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
            else
                usernameTextBox.Text = "Invalid User! Click 'Show Players'"
                usernameTextBox.TextColor3 = RED_INVALID
                StatusLabel.Text = "Status: Invalid target"
                
                createTween(usernameFrame, {BackgroundColor3 = RED_INVALID}, TWEEN_TIME_FAST):Play()
                wait(0.2)
                createTween(usernameFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
            end
            
            -- Reset text after a moment
            delay(3, function()
                if usernameTextBox.Text == "Invalid User! Click 'Show Players'" or 
                   usernameTextBox.Text == "No other players in game!" then
                    usernameTextBox.Text = ""
                    usernameTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                end
            end)
        end
    end
end)

-- Function to get a random player
local function getRandomPlayer()
    -- Update available players list first
    updatePlayerList()
    
    if #availablePlayers > 0 then
        local randomIndex = math.random(1, #availablePlayers)
        return availablePlayers[randomIndex]
    end
    
    return nil
end

-- Target random player button
targetRandomButton.MouseButton1Click:Connect(function()
    local randomPlayer = getRandomPlayer()
    
    if randomPlayer then
        targetPlayer = randomPlayer
        
        -- Update UI
        if randomPlayer.DisplayName and randomPlayer.DisplayName:lower() ~= randomPlayer.Name:lower() then
            usernameTextBox.Text = randomPlayer.DisplayName .. " (@" .. randomPlayer.Name .. ")"
        else
            usernameTextBox.Text = randomPlayer.Name
        end
        
        usernameTextBox.TextColor3 = GREEN_VALID
        StatusLabel.Text = "Status: Target set to " .. randomPlayer.Name
        
        -- Animation feedback
        createTween(targetRandomFrame, {BackgroundColor3 = GREEN_VALID}, TWEEN_TIME_FAST):Play()
        wait(0.2)
        createTween(targetRandomFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
    else
        StatusLabel.Text = "Status: No players to target"
        usernameTextBox.Text = "No targets available!"
        usernameTextBox.TextColor3 = YELLOW_WARNING
        
        -- Animation feedback
        createTween(targetRandomFrame, {BackgroundColor3 = YELLOW_WARNING}, TWEEN_TIME_FAST):Play()
        wait(0.2)
        createTween(targetRandomFrame, {BackgroundColor3 = PURPLE_MAIN}, TWEEN_TIME_FAST):Play()
        
        -- Reset text after a moment
        delay(2, function()
            if usernameTextBox.Text == "No targets available!" then
                usernameTextBox.Text = ""
                usernameTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
        end)
    end
end)

-- Auto Kill functionality
local function autoKill()
    if not getAutoKillToggle() then return end
    if not targetPlayer or not targetPlayer.Character then return end
    
    local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    local localHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    
    if not targetHRP or not localHRP then return end
    
    -- Update status
    StatusLabel.Text = "Status: Auto Killing " .. targetPlayer.Name
    
    -- Teleport near target and spin around them
    local currentTime = tick()
    local angle = currentTime * spinSpeed
    local radius = 5 -- distance from target
    
    local offset = Vector3.new(
        math.sin(angle) * radius,
        0, -- keep same height
        math.cos(angle) * radius
    )
    
    -- Set our position to be orbiting around the target
    localHRP.CFrame = CFrame.new(targetHRP.Position + offset, targetHRP.Position)
    
    -- Attack if cooldown elapsed
    if currentTime - lastAttackTime > attackCooldown then
        -- Attempt to trigger attack remotes
        -- This will depend on the game's specific remote events
        local attackRemotes = {
            "Attack",
            "AttackEvent", 
            "Combat",
            "CombatEvent",
            "Damage",
            "Hit"
        }
        
        for _, remoteName in pairs(attackRemotes) do
            -- Try to find and fire remote
            local remote = ReplicatedStorage:FindFirstChild(remoteName)
            if remote and remote:IsA("RemoteEvent") then
                remote:FireServer(targetPlayer)
                lastAttackTime = currentTime
                break
            end
        end
    end
end

-- Auto Kill Ground functionality
local function autoKillGround()
    if not getAutoKillGroundToggle() then return end
    if not targetPlayer or not targetPlayer.Character then return end
    
    local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    local localHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    
    if not targetHRP or not localHRP then return end
    
    -- Update status
    StatusLabel.Text = "Status: Auto Killing (Ground) " .. targetPlayer.Name
    
    -- Teleport under target
    local position = targetHRP.Position - Vector3.new(0, 3, 0)
    localHRP.CFrame = CFrame.new(position, targetHRP.Position)
    
    -- Attack if cooldown elapsed
    local currentTime = tick()
    if currentTime - lastAttackTime > attackCooldown then
        -- Attempt to trigger attack remotes
        -- This will depend on the game's specific remote events
        local attackRemotes = {
            "Attack",
            "AttackEvent", 
            "Combat",
            "CombatEvent",
            "Damage",
            "Hit"
        }
        
        for _, remoteName in pairs(attackRemotes) do
            -- Try to find and fire remote
            local remote = ReplicatedStorage:FindFirstChild(remoteName)
            if remote and remote:IsA("RemoteEvent") then
                remote:FireServer(targetPlayer)
                lastAttackTime = currentTime
                break
            end
        end
    end
end

-- Main loop for the script
RunService.Heartbeat:Connect(function()
    if getAutoKillToggle() then
        autoKill()
    elseif getAutoKillGroundToggle() then
        autoKillGround()
    end
end)

-- Check for players joining/leaving
Players.PlayerAdded:Connect(function(player)
    -- Update player list if visible
    if PlayerListFrame.Visible then
        updatePlayerList()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    -- Update player list if visible
    if PlayerListFrame.Visible then
        updatePlayerList()
    end
    
    -- Clear target if they left
    if targetPlayer and targetPlayer == player then
        targetPlayer = nil
        usernameTextBox.Text = "Target left the game!"
        usernameTextBox.TextColor3 = YELLOW_WARNING
        StatusLabel.Text = "Status: Target left the game"
        
        -- Reset after delay
        delay(2, function()
            if usernameTextBox.Text == "Target left the game!" then
                usernameTextBox.Text = ""
                usernameTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
        end)
    end
end)

-- Initial setup for player list
updatePlayerList()

-- Print successful load in console
print("âœ… Skibidi Script loaded to your ass")
StatusLabel.Text = "Status: Ready to target"